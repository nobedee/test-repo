{\rtf1\ansi\deff0
{\fonttbl{\f2\fnil\fcharset0 Courier New;}
{\f1\fnil\fcharset0 Arial;}
{\f0\fnil\fcharset0 Times New Roman;}
}
{\colortbl;}{\stylesheet{\s0 "Normal;}{\s1 Heading 1;}{\s2 Heading 2;}{\s3 Heading 3;}{\s4 Heading 4;}{\s5 Heading 5;}{\s6 Heading 6;}{\s7 Heading 7;}{\s8 Heading 8;}{\s9 Heading 9;}}
\deflang1024\notabind\facingp\hyphauto1\widowctrl
\sectd\plain\pgwsxn12240\pghsxn15840\marglsxn1440\margrsxn1440\margtsxn1440\margbsxn1920\headery0\footery0\pgndec{\headerl\pard\sl-240\sb770\sa430\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {}\par}{\footerl\pard\sl-240\sb770\sa910\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {}\par}{\headerr\pard\sl-240\sb770\sa430\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {}\par}{\footerr\pard\sl-240\sb770\sa910\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {}\par}\pard\sl20 {\*\bkmkstart ID_cygwin_45_x_45_cg}{\*\bkmkend ID_cygwin_45_x_45_cg}\fs20 \hyphpar0\par\pard\sb373\s1\sl647\qc \b\fs49\f1 Cygwin/X Contributor's Guide\keepn\hyphpar0\par\pard\sl260 \b0\fs20\f0 \~\hyphpar0\par\pard\sb1991\sl449\qc \b\fs34\f1 Harold L Hunt, II\keepn\hyphpar0\par\pard\sb216\sl449\qc Jon Turney\hyphpar0\par\page\pard\sl20 \b0\fs20\f0 \hyphpar0\par\pard\sl-240 \b\f1 Cygwin/X Contributor's Guide\hyphpar0\par\pard\sl260 \b0\f0 by\~Harold L Hunt, II\hyphpar0\par\pard\sb260\sl260 by\~Jon Turney\hyphpar0\par\pard\sb260\li200\ri200\sl234 \fs18 Copyright (C) 2004 Harold L Hunt II. Copyright (C) 2009-2021 Jon Turney. Permission is granted to copy, distribute and/or modify this document under the terms of the GNU Free Documentation License, Version 1.3 or any later version published by the Free Software Foundation; with no Invariant Sections, with no Front-Cover Texts, and with no Back-Cover Texts. A copy of the license is included in the section entitled "GNU Free Documentation License".\hyphpar0\par\sect\sectd\plain\pgwsxn12240\pghsxn15840\marglsxn1440\margrsxn1440\margtsxn1440\margbsxn1920\headery0\footery0\pgnlcrm{\headerl\pard\sl-240\sb770\sa430\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {}\par}{\footerl\pard\sl-240\sb770\sa910\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {\i\fs20 \chpgn }\par}{\headerr\pard\sl-240\sb770\sa430\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {}\par}{\footerr\pard\sl-240\sb770\sa910\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {\i\fs20 \chpgn }\par}\pard\sb311\s1\sl539 \b\fs41\f1 Table of Contents\keepn\hyphpar0\par\pard\sb207\li1440\sl260\fi-480 {\field{\*\fldinst   HYPERLINK  \\l ID_overview}{\fldrslt \fs20\f0 1. Overview}}\fs20\f0 \tqr\tldot\tx9360\tab {\field{\*\fldinst   HYPERLINK  \\l ID_overview}{\fldrslt {\field\flddirty{\*\fldinst PAGEREF ID_overview}{\fldrslt 000}}}}\keepn\hyphpar0\par\pard\sb48\li1440\sl260\fi-480 {\field{\*\fldinst   HYPERLINK  \\l ID_programming}{\fldrslt 2. Programming}}\tqr\tldot\tx9360\tab {\field{\*\fldinst   HYPERLINK  \\l ID_programming}{\fldrslt {\field\flddirty{\*\fldinst PAGEREF ID_programming}{\fldrslt 000}}}}\keepn\hyphpar0\par\pard\sb48\li1920\sl260\fi-480 {\field{\*\fldinst   HYPERLINK  \\l ID_prog_45_overview}{\fldrslt \b0 Overview}}\b0 \tqr\tldot\tx9360\tab {\field{\*\fldinst   HYPERLINK  \\l ID_prog_45_overview}{\fldrslt {\field\flddirty{\*\fldinst PAGEREF ID_prog_45_overview}{\fldrslt 000}}}}\hyphpar0\par\pard\li1920\sl260\fi-480 {\field{\*\fldinst   HYPERLINK  \\l ID_prog_45_tree_45_layout}{\fldrslt Source Code Tree Layout}}\tqr\tldot\tx9360\tab {\field{\*\fldinst   HYPERLINK  \\l ID_prog_45_tree_45_layout}{\fldrslt {\field\flddirty{\*\fldinst PAGEREF ID_prog_45_tree_45_layout}{\fldrslt 000}}}}\hyphpar0\par\pard\li1920\sl260\fi-480 {\field{\*\fldinst   HYPERLINK  \\l ID_prog_45_server_45_architecture}{\fldrslt Cygwin/X X Server Architecture}}\tqr\tldot\tx9360\tab {\field{\*\fldinst   HYPERLINK  \\l ID_prog_45_server_45_architecture}{\fldrslt {\field\flddirty{\*\fldinst PAGEREF ID_prog_45_server_45_architecture}{\fldrslt 000}}}}\hyphpar0\par\pard\li2400\sl260\fi-480 {\field{\*\fldinst   HYPERLINK  \\l ID_prog_45_server_45_architecture_45_privates}{\fldrslt Server Privates}}\tqr\tldot\tx9360\tab {\field{\*\fldinst   HYPERLINK  \\l ID_prog_45_server_45_architecture_45_privates}{\fldrslt {\field\flddirty{\*\fldinst PAGEREF ID_prog_45_server_45_architecture_45_privates}{\fldrslt 000}}}}\hyphpar0\par\pard\li2880\sl260\fi-480 {\field{\*\fldinst   HYPERLINK  \\l ID_prog_45_server_45_architecture_45_privates_45_macros}{\fldrslt Macros}}\tqr\tldot\tx9360\tab {\field{\*\fldinst   HYPERLINK  \\l ID_prog_45_server_45_architecture_45_privates_45_macros}{\fldrslt {\field\flddirty{\*\fldinst PAGEREF ID_prog_45_server_45_architecture_45_privates_45_macros}{\fldrslt 000}}}}\hyphpar0\par\pard\li2400\sl260\fi-480 {\field{\*\fldinst   HYPERLINK  \\l ID_prog_45_server_45_architecture_45_engines}{\fldrslt Engine System}}\tqr\tldot\tx9360\tab {\field{\*\fldinst   HYPERLINK  \\l ID_prog_45_server_45_architecture_45_engines}{\fldrslt {\field\flddirty{\*\fldinst PAGEREF ID_prog_45_server_45_architecture_45_engines}{\fldrslt 000}}}}\hyphpar0\par\pard\li2880\sl260\fi-480 {\field{\*\fldinst   HYPERLINK  \\l ID_prog_45_server_45_architecture_45_engines_45_shadow}{\fldrslt Shadow FB Engines}}\tqr\tldot\tx9360\tab {\field{\*\fldinst   HYPERLINK  \\l ID_prog_45_server_45_architecture_45_engines_45_shadow}{\fldrslt {\field\flddirty{\*\fldinst PAGEREF ID_prog_45_server_45_architecture_45_engines_45_shadow}{\fldrslt 000}}}}\hyphpar0\par\pard\li2880\sl260\fi-480 {\field{\*\fldinst   HYPERLINK  \\l ID_prog_45_server_45_architecture_45_engines_45_primary}{\fldrslt Primary FB Engine}}\tqr\tldot\tx9360\tab {\field{\*\fldinst   HYPERLINK  \\l ID_prog_45_server_45_architecture_45_engines_45_primary}{\fldrslt {\field\flddirty{\*\fldinst PAGEREF ID_prog_45_server_45_architecture_45_engines_45_primary}{\fldrslt 000}}}}\hyphpar0\par\pard\li2400\sl260\fi-480 {\field{\*\fldinst   HYPERLINK  \\l ID_prog_45_server_45_architecture_45_input}{\fldrslt User Input}}\tqr\tldot\tx9360\tab {\field{\*\fldinst   HYPERLINK  \\l ID_prog_45_server_45_architecture_45_input}{\fldrslt {\field\flddirty{\*\fldinst PAGEREF ID_prog_45_server_45_architecture_45_input}{\fldrslt 000}}}}\hyphpar0\par\pard\li2880\sl260\fi-480 {\field{\*\fldinst   HYPERLINK  \\l ID_prog_45_server_45_architecture_45_input_45_keyboard}{\fldrslt Keyboard}}\tqr\tldot\tx9360\tab {\field{\*\fldinst   HYPERLINK  \\l ID_prog_45_server_45_architecture_45_input_45_keyboard}{\fldrslt {\field\flddirty{\*\fldinst PAGEREF ID_prog_45_server_45_architecture_45_input_45_keyboard}{\fldrslt 000}}}}\hyphpar0\par\pard\li2880\sl260\fi-480 {\field{\*\fldinst   HYPERLINK  \\l ID_prog_45_server_45_architecture_45_input_45_mouse}{\fldrslt Mouse}}\tqr\tldot\tx9360\tab {\field{\*\fldinst   HYPERLINK  \\l ID_prog_45_server_45_architecture_45_input_45_mouse}{\fldrslt {\field\flddirty{\*\fldinst PAGEREF ID_prog_45_server_45_architecture_45_input_45_mouse}{\fldrslt 000}}}}\hyphpar0\par\pard\li2880\sl260\fi-480 {\field{\*\fldinst   HYPERLINK  \\l ID_prog_45_server_45_architecture_45_other_45_windows_45_messages}{\fldrslt Other Windows messages}}\tqr\tldot\tx9360\tab {\field{\*\fldinst   HYPERLINK  \\l ID_prog_45_server_45_architecture_45_other_45_windows_45_messages}{\fldrslt {\field\flddirty{\*\fldinst PAGEREF ID_prog_45_server_45_architecture_45_other_45_windows_45_messages}{\fldrslt 000}}}}\hyphpar0\par\pard\li1920\sl260\fi-480 {\field{\*\fldinst   HYPERLINK  \\l ID_prog_45_build_45_prerequisites}{\fldrslt Prerequisites for Building the Source Code}}\tqr\tldot\tx9360\tab {\field{\*\fldinst   HYPERLINK  \\l ID_prog_45_build_45_prerequisites}{\fldrslt {\field\flddirty{\*\fldinst PAGEREF ID_prog_45_build_45_prerequisites}{\fldrslt 000}}}}\hyphpar0\par\pard\li2400\sl260\fi-480 {\field{\*\fldinst   HYPERLINK  \\l ID_prog_45_compiling_45_required_45_packages}{\fldrslt Required Packages for Building}}\tqr\tldot\tx9360\tab {\field{\*\fldinst   HYPERLINK  \\l ID_prog_45_compiling_45_required_45_packages}{\fldrslt {\field\flddirty{\*\fldinst PAGEREF ID_prog_45_compiling_45_required_45_packages}{\fldrslt 000}}}}\hyphpar0\par\pard\li1920\sl260\fi-480 {\field{\*\fldinst   HYPERLINK  \\l ID_prog_45_obtaining_45_source}{\fldrslt Obtaining the Source Code}}\tqr\tldot\tx9360\tab {\field{\*\fldinst   HYPERLINK  \\l ID_prog_45_obtaining_45_source}{\fldrslt {\field\flddirty{\*\fldinst PAGEREF ID_prog_45_obtaining_45_source}{\fldrslt 000}}}}\hyphpar0\par\pard\li2400\sl260\fi-480 {\field{\*\fldinst   HYPERLINK  \\l ID_prog_45_source_45_cygwin_45_setup}{\fldrslt Obtaining via Cygwin setup}}\tqr\tldot\tx9360\tab {\field{\*\fldinst   HYPERLINK  \\l ID_prog_45_source_45_cygwin_45_setup}{\fldrslt {\field\flddirty{\*\fldinst PAGEREF ID_prog_45_source_45_cygwin_45_setup}{\fldrslt 000}}}}\hyphpar0\par\pard\li2400\sl260\fi-480 {\field{\*\fldinst   HYPERLINK  \\l ID_prog_45_source_45_cygports}{\fldrslt Obtaining from version control}}\tqr\tldot\tx9360\tab {\field{\*\fldinst   HYPERLINK  \\l ID_prog_45_source_45_cygports}{\fldrslt {\field\flddirty{\*\fldinst PAGEREF ID_prog_45_source_45_cygports}{\fldrslt 000}}}}\hyphpar0\par\pard\li2400\sl260\fi-480 {\field{\*\fldinst   HYPERLINK  \\l ID_prog_45_source_45_xorg}{\fldrslt Obtaining from X.Org}}\tqr\tldot\tx9360\tab {\field{\*\fldinst   HYPERLINK  \\l ID_prog_45_source_45_xorg}{\fldrslt {\field\flddirty{\*\fldinst PAGEREF ID_prog_45_source_45_xorg}{\fldrslt 000}}}}\hyphpar0\par\pard\li1920\sl260\fi-480 {\field{\*\fldinst   HYPERLINK  \\l ID_prog_45_build_45_native}{\fldrslt Native Compiling}}\tqr\tldot\tx9360\tab {\field{\*\fldinst   HYPERLINK  \\l ID_prog_45_build_45_native}{\fldrslt {\field\flddirty{\*\fldinst PAGEREF ID_prog_45_build_45_native}{\fldrslt 000}}}}\hyphpar0\par\pard\li2400\sl260\fi-480 {\field{\*\fldinst   HYPERLINK  \\l ID_prog_45_compiling}{\fldrslt Compiling the Source Code}}\tqr\tldot\tx9360\tab {\field{\*\fldinst   HYPERLINK  \\l ID_prog_45_compiling}{\fldrslt {\field\flddirty{\*\fldinst PAGEREF ID_prog_45_compiling}{\fldrslt 000}}}}\hyphpar0\par\pard\li2400\sl260\fi-480 {\field{\*\fldinst   HYPERLINK  \\l ID_prog_45_compiling_45_executing}{\fldrslt Running a local build}}\tqr\tldot\tx9360\tab {\field{\*\fldinst   HYPERLINK  \\l ID_prog_45_compiling_45_executing}{\fldrslt {\field\flddirty{\*\fldinst PAGEREF ID_prog_45_compiling_45_executing}{\fldrslt 000}}}}\hyphpar0\par\pard\li2400\sl260\fi-480 {\field{\*\fldinst   HYPERLINK  \\l ID_prog_45_compiling_45_install}{\fldrslt Installing a local build}}\tqr\tldot\tx9360\tab {\field{\*\fldinst   HYPERLINK  \\l ID_prog_45_compiling_45_install}{\fldrslt {\field\flddirty{\*\fldinst PAGEREF ID_prog_45_compiling_45_install}{\fldrslt 000}}}}\hyphpar0\par\pard\li1920\sl260\fi-480 {\field{\*\fldinst   HYPERLINK  \\l ID_prog_45_build_45_cross}{\fldrslt Cross Compiling}}\tqr\tldot\tx9360\tab {\field{\*\fldinst   HYPERLINK  \\l ID_prog_45_build_45_cross}{\fldrslt {\field\flddirty{\*\fldinst PAGEREF ID_prog_45_build_45_cross}{\fldrslt 000}}}}\hyphpar0\par\pard\li2400\sl260\fi-480 {\field{\*\fldinst   HYPERLINK  \\l ID_prog_45_cross_45_build}{\fldrslt Building Cygwin/X}}\tqr\tldot\tx9360\tab {\field{\*\fldinst   HYPERLINK  \\l ID_prog_45_cross_45_build}{\fldrslt {\field\flddirty{\*\fldinst PAGEREF ID_prog_45_cross_45_build}{\fldrslt 000}}}}\hyphpar0\par\pard\li1920\sl260\fi-480 {\field{\*\fldinst   HYPERLINK  \\l ID_prog_45_patches}{\fldrslt Contributing Patches}}\tqr\tldot\tx9360\tab {\field{\*\fldinst   HYPERLINK  \\l ID_prog_45_patches}{\fldrslt {\field\flddirty{\*\fldinst PAGEREF ID_prog_45_patches}{\fldrslt 000}}}}\hyphpar0\par\pard\li1920\sl260\fi-480 {\field{\*\fldinst   HYPERLINK  \\l ID_prog_45_distribution}{\fldrslt Packaging a Cygwin/X Distribution}}\tqr\tldot\tx9360\tab {\field{\*\fldinst   HYPERLINK  \\l ID_prog_45_distribution}{\fldrslt {\field\flddirty{\*\fldinst PAGEREF ID_prog_45_distribution}{\fldrslt 000}}}}\hyphpar0\par\pard\li1920\sl260\fi-480 {\field{\*\fldinst   HYPERLINK  \\l ID_prog_45_reference}{\fldrslt Reference Documentation}}\tqr\tldot\tx9360\tab {\field{\*\fldinst   HYPERLINK  \\l ID_prog_45_reference}{\fldrslt {\field\flddirty{\*\fldinst PAGEREF ID_prog_45_reference}{\fldrslt 000}}}}\hyphpar0\par\pard\li2400\sl260\fi-480 {\field{\*\fldinst   HYPERLINK  \\l ID_xorg_45_docs}{\fldrslt X.Org documents}}\tqr\tldot\tx9360\tab {\field{\*\fldinst   HYPERLINK  \\l ID_xorg_45_docs}{\fldrslt {\field\flddirty{\*\fldinst PAGEREF ID_xorg_45_docs}{\fldrslt 000}}}}\hyphpar0\par\pard\li2400\sl260\fi-480 {\field{\*\fldinst   HYPERLINK  \\l ID_unoffical_45_docs}{\fldrslt Further reading}}\tqr\tldot\tx9360\tab {\field{\*\fldinst   HYPERLINK  \\l ID_unoffical_45_docs}{\fldrslt {\field\flddirty{\*\fldinst PAGEREF ID_unoffical_45_docs}{\fldrslt 000}}}}\hyphpar0\par\pard\li2400\sl260\fi-480 {\field{\*\fldinst   HYPERLINK  \\l ID_x_45_server_45_porting_45_docs}{\fldrslt X server porting documents}}\tqr\tldot\tx9360\tab {\field{\*\fldinst   HYPERLINK  \\l ID_x_45_server_45_porting_45_docs}{\fldrslt {\field\flddirty{\*\fldinst PAGEREF ID_x_45_server_45_porting_45_docs}{\fldrslt 000}}}}\hyphpar0\par\pard\sb48\li1440\sl260\fi-480 {\field{\*\fldinst   HYPERLINK  \\l ID_documentation}{\fldrslt \b 3. Documentation}}\b \tqr\tldot\tx9360\tab {\field{\*\fldinst   HYPERLINK  \\l ID_documentation}{\fldrslt {\field\flddirty{\*\fldinst PAGEREF ID_documentation}{\fldrslt 000}}}}\keepn\hyphpar0\par\pard\sb48\li1920\sl260\fi-480 {\field{\*\fldinst   HYPERLINK  \\l ID_docs_45_overview}{\fldrslt \b0 Overview}}\b0 \tqr\tldot\tx9360\tab {\field{\*\fldinst   HYPERLINK  \\l ID_docs_45_overview}{\fldrslt {\field\flddirty{\*\fldinst PAGEREF ID_docs_45_overview}{\fldrslt 000}}}}\hyphpar0\par\pard\li1920\sl260\fi-480 {\field{\*\fldinst   HYPERLINK  \\l ID_docs_45_obtaining_45_source}{\fldrslt Obtaining the Source Code}}\tqr\tldot\tx9360\tab {\field{\*\fldinst   HYPERLINK  \\l ID_docs_45_obtaining_45_source}{\fldrslt {\field\flddirty{\*\fldinst PAGEREF ID_docs_45_obtaining_45_source}{\fldrslt 000}}}}\hyphpar0\par\pard\li2400\sl260\fi-480 {\field{\*\fldinst   HYPERLINK  \\l ID_docs_45_obtaining_45_source_45_release}{\fldrslt Source of latest cygwin-x-doc release}}\tqr\tldot\tx9360\tab {\field{\*\fldinst   HYPERLINK  \\l ID_docs_45_obtaining_45_source_45_release}{\fldrslt {\field\flddirty{\*\fldinst PAGEREF ID_docs_45_obtaining_45_source_45_release}{\fldrslt 000}}}}\hyphpar0\par\pard\li2400\sl260\fi-480 {\field{\*\fldinst   HYPERLINK  \\l ID_docs_45_obtaining_45_source_45_git}{\fldrslt Source from git}}\tqr\tldot\tx9360\tab {\field{\*\fldinst   HYPERLINK  \\l ID_docs_45_obtaining_45_source_45_git}{\fldrslt {\field\flddirty{\*\fldinst PAGEREF ID_docs_45_obtaining_45_source_45_git}{\fldrslt 000}}}}\hyphpar0\par\pard\li1920\sl260\fi-480 {\field{\*\fldinst   HYPERLINK  \\l ID_docs_45_docbook}{\fldrslt Setting Up a DocBook Build Environment}}\tqr\tldot\tx9360\tab {\field{\*\fldinst   HYPERLINK  \\l ID_docs_45_docbook}{\fldrslt {\field\flddirty{\*\fldinst PAGEREF ID_docs_45_docbook}{\fldrslt 000}}}}\hyphpar0\par\pard\li2400\sl260\fi-480 {\field{\*\fldinst   HYPERLINK  \\l ID_prog_45_docbook_45_required_45_packages}{\fldrslt Required Packages for building documentation}}\tqr\tldot\tx9360\tab {\field{\*\fldinst   HYPERLINK  \\l ID_prog_45_docbook_45_required_45_packages}{\fldrslt {\field\flddirty{\*\fldinst PAGEREF ID_prog_45_docbook_45_required_45_packages}{\fldrslt 000}}}}\hyphpar0\par\pard\li1920\sl260\fi-480 {\field{\*\fldinst   HYPERLINK  \\l ID_docs_45_build}{\fldrslt Building the Documentation}}\tqr\tldot\tx9360\tab {\field{\*\fldinst   HYPERLINK  \\l ID_docs_45_build}{\fldrslt {\field\flddirty{\*\fldinst PAGEREF ID_docs_45_build}{\fldrslt 000}}}}\hyphpar0\par\pard\li1920\sl260\fi-480 {\field{\*\fldinst   HYPERLINK  \\l ID_docs_45_distribution}{\fldrslt Packaging a Documentation Distribution}}\tqr\tldot\tx9360\tab {\field{\*\fldinst   HYPERLINK  \\l ID_docs_45_distribution}{\fldrslt {\field\flddirty{\*\fldinst PAGEREF ID_docs_45_distribution}{\fldrslt 000}}}}\hyphpar0\par\pard\sb48\li1440\sl260\fi-480 {\field{\*\fldinst   HYPERLINK  \\l ID_website}{\fldrslt \b 4. Web Site Maintenance}}\b \tqr\tldot\tx9360\tab {\field{\*\fldinst   HYPERLINK  \\l ID_website}{\fldrslt {\field\flddirty{\*\fldinst PAGEREF ID_website}{\fldrslt 000}}}}\keepn\hyphpar0\par\pard\sb48\li1920\sl260\fi-480 {\field{\*\fldinst   HYPERLINK  \\l ID_updating_45_documentation_45_on_45_website}{\fldrslt \b0 Updating the documentation on the web site}}\b0 \tqr\tldot\tx9360\tab {\field{\*\fldinst   HYPERLINK  \\l ID_updating_45_documentation_45_on_45_website}{\fldrslt {\field\flddirty{\*\fldinst PAGEREF ID_updating_45_documentation_45_on_45_website}{\fldrslt 000}}}}\hyphpar0\par\pard\sb48\li1440\sl260\fi-480 {\field{\*\fldinst   HYPERLINK  \\l ID_biblio}{\fldrslt \b Bibliography}}\b \tqr\tldot\tx9360\tab {\field{\*\fldinst   HYPERLINK  \\l ID_biblio}{\fldrslt {\field\flddirty{\*\fldinst PAGEREF ID_biblio}{\fldrslt 000}}}}\keepn\hyphpar0\par\pard\sb48\li1440\sl260\fi-480 {\field{\*\fldinst   HYPERLINK  \\l ID_glossary}{\fldrslt Glossary}}\tqr\tldot\tx9360\tab {\field{\*\fldinst   HYPERLINK  \\l ID_glossary}{\fldrslt {\field\flddirty{\*\fldinst PAGEREF ID_glossary}{\fldrslt 000}}}}\keepn\hyphpar0\par\pard\sb48\li1440\sl260\fi-480 {\field{\*\fldinst   HYPERLINK  \\l ID_cross}{\fldrslt A. Building a cross-compiler}}\tqr\tldot\tx9360\tab {\field{\*\fldinst   HYPERLINK  \\l ID_cross}{\fldrslt {\field\flddirty{\*\fldinst PAGEREF ID_cross}{\fldrslt 000}}}}\keepn\hyphpar0\par\pard\sb48\li1920\sl260\fi-480 {\field{\*\fldinst   HYPERLINK  \\l ID_cross_45_obtaining_45_compiler_45_source}{\fldrslt \b0 Obtaining binutils and GCC source}}\b0 \tqr\tldot\tx9360\tab {\field{\*\fldinst   HYPERLINK  \\l ID_cross_45_obtaining_45_compiler_45_source}{\fldrslt {\field\flddirty{\*\fldinst PAGEREF ID_cross_45_obtaining_45_compiler_45_source}{\fldrslt 000}}}}\hyphpar0\par\pard\li1920\sl260\fi-480 {\field{\*\fldinst   HYPERLINK  \\l ID_cross_45_obtaining_45_cygwin_45_headers_45_and_45_libs}{\fldrslt Obtaining Cygwin headers and libraries}}\tqr\tldot\tx9360\tab {\field{\*\fldinst   HYPERLINK  \\l ID_cross_45_obtaining_45_cygwin_45_headers_45_and_45_libs}{\fldrslt {\field\flddirty{\*\fldinst PAGEREF ID_cross_45_obtaining_45_cygwin_45_headers_45_and_45_libs}{\fldrslt 000}}}}\hyphpar0\par\pard\li1920\sl260\fi-480 {\field{\*\fldinst   HYPERLINK  \\l ID_cross_45_building_45_binutils}{\fldrslt Building binutils}}\tqr\tldot\tx9360\tab {\field{\*\fldinst   HYPERLINK  \\l ID_cross_45_building_45_binutils}{\fldrslt {\field\flddirty{\*\fldinst PAGEREF ID_cross_45_building_45_binutils}{\fldrslt 000}}}}\hyphpar0\par\pard\li1920\sl260\fi-480 {\field{\*\fldinst   HYPERLINK  \\l ID_cross_45_building_45_gcc}{\fldrslt Building GCC}}\tqr\tldot\tx9360\tab {\field{\*\fldinst   HYPERLINK  \\l ID_cross_45_building_45_gcc}{\fldrslt {\field\flddirty{\*\fldinst PAGEREF ID_cross_45_building_45_gcc}{\fldrslt 000}}}}\hyphpar0\par\pard\sb48\li1440\sl260\fi-480 {\field{\*\fldinst   HYPERLINK  \\l ID_gfdl}{\fldrslt \b B. GNU Free Documentation License}}\b \tqr\tldot\tx9360\tab {\field{\*\fldinst   HYPERLINK  \\l ID_gfdl}{\fldrslt {\field\flddirty{\*\fldinst PAGEREF ID_gfdl}{\fldrslt 000}}}}\keepn\hyphpar0\par\pard\sb48\li1440\sl260\fi-480 {\field{\*\fldinst   HYPERLINK  \\l ID_colophon}{\fldrslt Colophon}}\tqr\tldot\tx9360\tab {\field{\*\fldinst   HYPERLINK  \\l ID_colophon}{\fldrslt {\field\flddirty{\*\fldinst PAGEREF ID_colophon}{\fldrslt 000}}}}\hyphpar0\par\sect\sectd\plain\pgwsxn12240\pghsxn15840\marglsxn1440\margrsxn1440\margtsxn1440\margbsxn1920\headery0\footery0\pgndec\pgnrestart\titlepg{\headerf\pard\sl-240\sb770\sa430\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {}\par}{\footerf\pard\sl-240\sb770\sa910\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {\i\fs20 \chpgn }\par}{\headerl\pard\sl-240\sb770\sa430\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {\i\fs20 Chapter 1. Overview}\par}{\footerl\pard\sl-240\sb770\sa910\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {\i\fs20 \chpgn }\par}{\headerr\pard\sl-240\sb770\sa430\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {\i\fs20 Chapter 1. Overview}\par}{\footerr\pard\sl-240\sb770\sa910\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {\i\fs20 \chpgn }\par}\pard\sb311\s1\sl539 {\*\bkmkstart ID_overview}{\*\bkmkend ID_overview}\b\fs41\f1 Chapter 1. Overview\keepn\hyphpar0\par\pard\sb207\li960\sl260 \b0\fs20\lang1033\f0 The Cygwin/X project can use your help! We will do everything we can to make experienced contributors productive as soon as possible. We also want to make it as easy as possible for new contributers to make Cygwin/X their first open source project.\hyphpar0\par\pard\sb100\li960\sl260 Anyone who despaired of touching the monolithic tree will find things much easier now with modular X. If you want to see Cygwin/X stay current and add new features, then WE NEED YOU.\hyphpar0\par\pard\sb100\li960\sl260 We need {\field{\*\fldinst   HYPERLINK  \\l ID_programming}{\fldrslt programmers}}, {\field{\*\fldinst   HYPERLINK  \\l ID_documentation}{\fldrslt documentation writers}}, and {\field{\*\fldinst   HYPERLINK  \\l ID_website}{\fldrslt website maintainers}}.\hyphpar0\par\sect\sectd\plain\pgwsxn12240\pghsxn15840\marglsxn1440\margrsxn1440\margtsxn1440\margbsxn1920\headery0\footery0\pgndec\titlepg{\headerf\pard\sl-240\sb770\sa430\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {}\par}{\footerf\pard\sl-240\sb770\sa910\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {\i\fs20 \chpgn }\par}{\headerl\pard\sl-240\sb770\sa430\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {\i\fs20 Chapter 2. Programming}\par}{\footerl\pard\sl-240\sb770\sa910\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {\i\fs20 \chpgn }\par}{\headerr\pard\sl-240\sb770\sa430\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {\i\fs20 Chapter 2. Programming}\par}{\footerr\pard\sl-240\sb770\sa910\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {\i\fs20 \chpgn }\par}\pard\sb311\s1\sl539 {\*\bkmkstart ID_programming}{\*\bkmkend ID_programming}\b\fs41\f1 Chapter 2. Programming\keepn\hyphpar0\par\pard\sb259\s2\sl449 {\*\bkmkstart ID_prog_45_overview}{\*\bkmkend ID_prog_45_overview}\fs34 Overview\keepn\hyphpar0\par\pard\sb173\li960\sl260 \b0\fs20\lang1033\f0 This chapter provides a consolidated overview of all of the information needed to begin making source code contributions to Cygwin/X. Creating a source code contribution for Cygwin/X requires an amazingly small amount of information; however, prior to this document that tiny amount of information was difficult to obtain, as it was scattered across several documents and source code files. New programmers with no open source project experience, as well as programming gurus, will be able to make source code contributions to Cygwin/X after reading this chapter. Programming gurus are great; our intention is to create more of them.\hyphpar0\par\pard\sb100\li960\sl260 This document is primarily focused on the Cygwin/X X server; most other X.Org components are extremely stable and work out-of-the-box on Cygwin\hyphpar0\par\pard\sb100\li960\sl260 The primary source of information on developing X is the X.Org developer startpage (http://www.x.org/wiki/DeveloperStart)\hyphpar0\par\pard\sb100\li960\sl260 Downloading the X Window System source code tree can take anywhere from 10 minutes to 10 hours, depending upon the speed of your network connection. If you have an active network connection at your disposal you may want to skip ahead to {\field{\*\fldinst   HYPERLINK  \\l ID_prog_45_obtaining_45_source}{\fldrslt the Section called \i Obtaining the Source Code}} and start downloading the source code tree now. You will find it advantageous to have a source code tree as you read the other sections.\hyphpar0\par\pard\sb259\s2\sl449 {\*\bkmkstart ID_prog_45_tree_45_layout}{\*\bkmkend ID_prog_45_tree_45_layout}\b\fs34\lang1024\f1 Source Code Tree Layout\keepn\hyphpar0\par\pard\sb173\li960\sl260 \b0\fs20\lang1033\f0 A brief overview of the \fs18\f2 xserver\fs20\f0  source tree layout, highlighting the parts of important and interest for Cygwin/X development:\hyphpar0\par\pard\sb100\li1160\sl260\fi-200 \tx1160 \fs16\lang1024 \'95\tab \fs18\f2 dix\fs20\f0  contains [drawing] {\field{\*\fldinst   HYPERLINK  \\l ID_gloss_45_dix_45_layer}{\fldrslt \i device independent X}} routines. \fs18\f2 main.c\fs20\f0  contains the \fs18\f2 main\fs20\f0  entry-point function for the Cygwin/X X Server. The X Server startup procedure can be followed by examining \fs18\f2 main\fs20\f0 .\hyphpar0\par\pard\sb100\li1160\sl260\fi-200 \tx1160 \fs16 \'95\tab \fs18\f2 fb\fs20\f0  contains the modern framebuffer drawing procedures used by Cygwin/X.\hyphpar0\par\pard\sb100\li1160\sl260\fi-200 \tx1160 \fs16 \'95\tab \fs18\f2 hw\fs20\f0  contains [drawing] hardware dependent functions.\hyphpar0\par\pard\sb100\li1360\sl260\fi-200 \tx1360 \fs14 \'95\tab \fs18\f2 kdrive\fs20\f0  \hyphpar0\par\pard\sb100\li1560\sl260\fi-200 \tx1560 \fs14 \'95\tab \fs18\f2 ephyr\fs20\f0  contains the Xephyr X Server which uses a window on a host X Server as its framebuffer. Unlike Xnest it supports modern X extensions such as Composite, Damage, randr, etc.\hyphpar0\par\pard\sb100\li1360\sl260\fi-200 \tx1360 \fs14 \'95\tab \fs18\f2 vfb\fs20\f0  contains the Virtual Framebuffer X Server. The vfb server draws to a system memory framebuffer. Xvfb is primarly used for testing, or for running X clients which require an X server but there is no interest in seeing the content of it's windows.\hyphpar0\par\pard\sb100\li1360\sl260\fi-200 \tx1360 \fs14 \'95\tab \fs18\f2 xfree86\fs20\f0  contains source code for the X Window System servers that run on various operating systems that generally have low-level access to the graphics hardware. Cygwin/X does not have low-level access to the graphics hardware, thus Cygwin/X is not able to utilize the X Window System server.\hyphpar0\par\pard\sb100\li1360\sl260\fi-200 \tx1360 \fs14 \'95\tab \fs18\f2 xnest\fs20\f0  contains source code for the Nested X Server which runs inside of another X Server.\hyphpar0\par\pard\sb100\li1360\sl260\fi-200 \tx1360 \fs14 \'95\tab \fs18\f2 xquartz\fs20\f0  contains the source code for the XQuartz X Server, which runs on Mac OS X.\hyphpar0\par\pard\sb100\li1360\sl260\fi-200 \tx1360 \fs14 \'95\tab \fs18\f2 xwin\fs20\f0  contains the source code for the Cygwin/X X Server. This is the primary directory that Cygwin/X programmers will be interested in.\hyphpar0\par\pard\sb100\li1160\sl260\fi-200 \tx1160 \fs16 \'95\tab \fs18\f2 include\fs20\f0  contains header files specific to the X Server program, such as graphics context structures. This directory is useful to Cygwin/X programmers when they need to lookup the name or data type of members of various X Server structures.\hyphpar0\par\pard\sb100\li1160\sl260\fi-200 \tx1160 \fs16 \'95\tab \fs18\f2 mi\fs20\f0  contains {\field{\*\fldinst   HYPERLINK  \\l ID_gloss_45_mi_45_layer}{\fldrslt \i machine independent}} drawing routines.\hyphpar0\par\pard\sb100\li1160\sl260\fi-200 \tx1160 \fs16 \'95\tab \fs18\f2 miext\fs20\f0  contains various machine independent X extensions.\hyphpar0\par\pard\sb100\li1360\sl260\fi-200 \tx1360 \fs14 \'95\tab \fs18\f2 shadow\fs20\f0  contains source code for the {\field{\*\fldinst   HYPERLINK  \\l ID_gloss_45_shadow_45_layer}{\fldrslt \i shadow}} framebuffer layer that the Cygwin/X X Server depends upon. This directory is of primary importance to Cygwin/X, but it is maintained by other programmers and is only of direct interest to Cygwin/X programmers when it fails to build. The shadow layer does three things:\hyphpar0\par\pard\sb100\li1720\sl260\fi-360 \tqr\tx1670\tx1720\tab 1.\tab Allows the \fs18\f2 fb\fs20\f0  graphics routines to draw to an offscreen framebuffer.\hyphpar0\par\pard\sb100\li1720\sl260\fi-360 \tqr\tx1670\tx1720\tab 2.\tab Keeps track of the regions of the offscreen framebuffer that have been drawn on.\hyphpar0\par\pard\sb100\li1720\sl260\fi-360 \tqr\tx1670\tx1720\tab 3.\tab Calls one of Cygwin/X's engine dependent ShadowUpdate () functions to transfer the updated regions of the offscreen framebuffer to the screen.\hyphpar0\par\pard\sb100\li1160\sl260\fi-200 \tx1160 \fs16 \'95\tab \fs18\f2 os\fs20\f0  contains {\field{\*\fldinst   HYPERLINK  \\l ID_gloss_45_os_45_layer}{\fldrslt \i operating system dependent}} X Server functions. However, the functions in the \fs18\f2 os\fs20\f0  have been written in such a way that they are actually compatible with most UNIX-style operating systems, include Cygwin.\hyphpar0\par\pard\sb100\li960\sl260 \lang1033 Other packages of interest in the X.Org Release\hyphpar0\par\pard\sb100\li1160\sl260\fi-200 \tx1160 \fs16\lang1024 \'95\tab \fs18\f2 xorg-docs\fs20\f0  contains documentation for various components of the X Window System. Cygwin/X-specific documentation is not contained in this directory.\hyphpar0\par\pard\sb100\li1160\sl260\fi-200 \tx1160 \fs16 \'95\tab \fs18\f2 xorgproto\fs20\f0  contains the various X Window System protocol headers.\hyphpar0\par\pard\sb100\li1160\sl260\fi-200 \tx1160 \fs16 \'95\tab \fs20 The various X client and X Server libraries. Cygwin/X programmers occasionally need to fix Cygwin-related build errors that occur in these libraries.\hyphpar0\par\pard\sb100\li1160\sl260\fi-200 \tx1160 \fs16 \'95\tab \fs20 The various standard X utility and test applications (e.g. \b xeyes\b0 , \b xhost\b0 , \b xinit\b0 , \b xlogo\b0 , etc.). Cygwin/X programmers occasionally need to fix Cygwin-related build errors that occur in these applications.\hyphpar0\par\pard\sb100\li1160\sl260\fi-200 \tx1160 \fs16 \'95\tab \fs20 The various font packages that contain font definition files used to compile fonts.\hyphpar0\par\pard\sb259\s2\sl449 {\*\bkmkstart ID_prog_45_server_45_architecture}{\*\bkmkend ID_prog_45_server_45_architecture}\b\fs34\f1 Cygwin/X X Server Architecture\keepn\hyphpar0\par\pard\sb173\li960\sl260 \b0\fs20\lang1033\f0 Cygwin/X's X Server architecture was heavily inspired by {\field{\*\fldinst   HYPERLINK  \\l ID_porting_45_layer_45_definition}{\fldrslt Angebranndt94}}, the Definition of the Porting Layer for the X v11 Sample Server.\hyphpar0\par\pard\sb216\s3\li960\sl374 {\*\bkmkstart ID_prog_45_server_45_architecture_45_privates}{\*\bkmkend ID_prog_45_server_45_architecture_45_privates}\b\fs28\lang1024\f1 Server Privates\keepn\hyphpar0\par\pard\sb144\li960\sl260 \b0\fs20\lang1033\f0 X Servers use various structures to pass information around to functions. Some of those structures are colormaps, {\field{\*\fldinst   HYPERLINK  \\l ID_gloss_45_gc}{\fldrslt \i graphics contexts}} (GCs), {\field{\*\fldinst   HYPERLINK  \\l ID_gloss_45_pixmap}{\fldrslt \i pixmaps}}, and {\field{\*\fldinst   HYPERLINK  \\l ID_gloss_45_screen}{\fldrslt \i screens}}. The X protocol defines the contents of each of these structures, however, the X Server implementation and various X Server libraries ({\field{\*\fldinst   HYPERLINK  \\l ID_gloss_45_mi_45_layer}{\fldrslt \i MI}}, {\field{\*\fldinst   HYPERLINK  \\l ID_gloss_45_fb_45_layer}{\fldrslt \i FB}}, {\field{\*\fldinst   HYPERLINK  \\l ID_gloss_45_shadow_45_layer}{\fldrslt \i Shadow}}, etc.) may require additional information to be associated with these internal structures. For example, the Cygwin/X X Server must associate a Windows window handle (hwnd) with each X Server screen that is open.\hyphpar0\par\pard\sb100\li960\sl260 {\field{\*\fldinst   HYPERLINK  \\l ID_gloss_45_privates}{\fldrslt \i Privates}} are the mechanism provided by the X protocol for associating additional information with internal X Server structures. Privates originally consisted of a single pointer member contained in each structure, usually named \i\fs18\f2 devPrivate\i0\fs20\f0  or \i\fs18\f2 devPriv\i0\fs20\f0 . This original specification only allowed one of the X Server layers (mi, fb, shadow, etc.) to have privates associated with an internal structure. Privates have since been revised.\hyphpar0\par\pard\sb100\li960\sl260 The current privates implementation requires that each X Server layer call a function on startup to indicate that that layer will require privates and to obtain an index into the array of privates that that layer's privates will be stored at. Modern privates are generally stored in an array of type DevUnion pointed to by a structure member named \i\fs18\f2 devPrivates\i0\fs20\f0 ; DevUnion is defined in \fs18\f2 xserver/include/miscstruct.h\fs20\f0 . There are two different memory allocation schemes for \i\fs18\f2 devPrivates\i0\fs20\f0 .\hyphpar0\par\pard\sb100\li960\sl260 Memory for privates structures can either be preallocated or allocated upon use. Preallocation, the preferred method for GCs, pixmaps, and windows, requires that the size of the privates memory needed be specified during X Server initialization. Preallocation allows the {\field{\*\fldinst   HYPERLINK  \\l ID_gloss_45_dix_45_layer}{\fldrslt \i DIX}} layer to allocate all memory needed for a given internal structure, including all privates memory, as a single contiguous block of memory; this greatly reduces memory fragmentation. Allocation upon use, used by screens, requires the {\field{\*\fldinst   HYPERLINK  \\l ID_gloss_45_ddx_45_layer}{\fldrslt \i DDX}} structure creation function to allocate memory for the privates; \fs18\f2 winScreenInit\fs20\f0  calling \fs18\f2 winAllocatePrivates\fs20\f0 , which allocates screen privates memory directly, is an example of this. Allocation upon use can optionally and non-optimally be used by GCs, pixmaps, and windows.\hyphpar0\par\pard\sb200\s4\li960\sl312 {\*\bkmkstart ID_prog_45_server_45_architecture_45_privates_45_macros}{\*\bkmkend ID_prog_45_server_45_architecture_45_privates_45_macros}\b\fs24\lang1024\f1 Macros\keepn\hyphpar0\par\pard\sb120\li960\sl260 \b0\fs20\lang1033\f0 Three macros are provided for each class of privates that make setting up and using the privates easier. The macros for screen privates are examined as an example.\hyphpar0\par\pard\sb200\li960\sl234 \fs18\lang1024\f2 winPrivScreenPtr \b winGetScreenPriv\b0 (ScreenPtr \i pScreen\i0 );\hyphpar0\par\pard\sb200\li960\sl260 \lang1033 winGetScreenPriv\fs20\f0  takes a non-NULL pointer to a screen, a ScreenPtr, and returns the pointer stored in the DDX privates for that screen. Passing a NULL or invalid ScreenPtr to \fs18\f2 winGetScreenPriv\fs20\f0  will cause an access violation, crashing the Cygwin/X X Server.\hyphpar0\par\pard\sb200\li960\sl234 \fs18\lang1024\f2 void \b winSetScreenPriv\b0 (ScreenPtr \i pScreen\i0 , void * \i pvPrivates\i0 );\hyphpar0\par\pard\sb200\li960\sl260 \lang1033 winSetScreenPriv\fs20\f0  takes a non-NULL pointer to a screen, a ScreenPtr, and sets the DDX privates pointer to the value of the \i\fs18\f2 pvPrivates\i0\fs20\f0  parameter. Passing a NULL or invalid ScreenPtr to \fs18\f2 winSetScreenPriv\fs20\f0  will cause an access violation, crashing the Cygwin/X X Server.\hyphpar0\par\pard\sb200\li960\sl234 \fs18\lang1024\f2 void \b winScreenPriv\b0 (ScreenPtr \i pScreen\i0 );\hyphpar0\par\pard\sb200\li960\sl260 \lang1033 winScreenPriv\fs20\f0  takes a non-NULL pointer to a screen, a ScreenPtr, and declares a local variable in the calling function named \fs18\f2 pScreenPriv\fs20\f0 . \fs18\f2 winScreenPriv\fs20\f0  may only be called at the top of a C function within the variable declaration block; calling the function elsewhere will break the ANSI C rule that all variables must be declared at the top of a scope block. Passing a NULL or invalid ScreenPtr to \fs18\f2 winScreenPriv\fs20\f0  will cause an access violation, crashing the Cygwin/X X Server.\hyphpar0\par\pard\sb216\s3\li960\sl374 {\*\bkmkstart ID_prog_45_server_45_architecture_45_engines}{\*\bkmkend ID_prog_45_server_45_architecture_45_engines}\b\fs28\lang1024\f1 Engine System\keepn\hyphpar0\par\pard\sb144\li960\sl260 \b0\fs20\lang1033\f0 The Cygwin/X X Server uses several methods of drawing graphics on the display device; each of these different drawing methods is referred to as an engine. It should be noted that the Primary FB engine is historical and is discussed here only for completeness.\hyphpar0\par\pard\sb200\s4\li960\sl312 {\*\bkmkstart ID_prog_45_server_45_architecture_45_engines_45_shadow}{\*\bkmkend ID_prog_45_server_45_architecture_45_engines_45_shadow}\b\fs24\lang1024\f1 Shadow FB Engines\keepn\hyphpar0\par\pard\sb120\li960\sl260 \b0\fs20\lang1033\f0 The Shadow FB engines use Keith Packard's {\field{\*\fldinst   HYPERLINK  \\l ID_gloss_45_fb_45_layer}{\fldrslt \i FB}} drawing procedures wrapped with his {\field{\*\fldinst   HYPERLINK  \\l ID_gloss_45_shadow_45_layer}{\fldrslt \i Shadow}} layer that allows drawing to an {\field{\*\fldinst   HYPERLINK  \\l ID_gloss_45_offscreen_45_framebuffer}{\fldrslt \i offscreen framebuffer}} with periodic updates of the {\field{\*\fldinst   HYPERLINK  \\l ID_gloss_45_primary_45_framebuffer}{\fldrslt \i primary framebuffer}}.\hyphpar0\par\pard\sb100\li960\sl260 Currently, shadow FB engines exist using DirectDraw4 and GDI.\hyphpar0\par\pard\sb200\s4\li960\sl312 {\*\bkmkstart ID_prog_45_server_45_architecture_45_engines_45_primary}{\*\bkmkend ID_prog_45_server_45_architecture_45_engines_45_primary}\b\fs24\lang1024\f1 Primary FB Engine\keepn\hyphpar0\par\pard\sb120\li960\sl260 \b0\fs20\lang1033\f0 The Primary FB engine worked in the same manner that the original Cygwin/X X Server worked, namely, it uses \fs18\f2 IDirectDrawSurface_Lock\fs20\f0  to obtain a pointer to the {\field{\*\fldinst   HYPERLINK  \\l ID_gloss_45_primary_45_framebuffer}{\fldrslt \i primary framebuffer}} memory at server startup. This memory pointer is held until the X Server shuts down. This technique does not work on all versions of Windows.\hyphpar0\par\pard\sb100\li960\sl260 Locking the primary framebuffer on Windows 95/98/Me causes the Win16Mutex to be obtained by the program that locks the primary framebuffer; the Win16Mutex is not released until the primary framebuffer is unlocked. The Win16Mutex is a semaphore introduced in Windows 95 that prevents 16 bit Windows code from being reentered by different threads or processes. For compatibility reasons, all GDI operations in Windows 95/98/Me are written in 16 bit code, thus requiring that the Win16Mutex be obtained before performing those operations. All of this leads to the following situation on Windows 95/98/Me:\hyphpar0\par\pard\sb100\li1320\sl260\fi-360 \tqr\tx1270\tx1320\tab \lang1024 1.\tab The primary framebuffer is locked, causing the Cygwin/X X Server to hold the Win16Mutex.\hyphpar0\par\pard\sb100\li1320\sl260\fi-360 \tqr\tx1270\tx1320\tab 2.\tab Windows switches the Cygwin/X X Server out of the current process slot; another process is switched in.\hyphpar0\par\pard\sb100\li1320\sl260\fi-360 \tqr\tx1270\tx1320\tab 3.\tab The newly selected process makes a GDI function call.\hyphpar0\par\pard\sb100\li1320\sl260\fi-360 \tqr\tx1270\tx1320\tab 4.\tab The GDI function call must wait for the Win16Mutex to be released, but the Win16Mutex cannot be released until the Cygwin/X X Server releases the Win16Mutex. However, the Cygwin/X X Server will not release the Win16Mutex until it exits. The end result is that the Win16Mutex has been deadlocked and the Windows machine is frozen with no way to recover.\hyphpar0\par\pard\sb100\li960\sl260 \lang1033 Windows NT/2000/XP do not contain any 16 bit code, so the Win16Mutex is not an issue; thus, the Primary FB engine works fine on those operating systems. However, drawing directly to the primary framebuffer suffers performance problems. For example, on some systems writing to the primary framebuffer requires doing memory reads and writes across the PCI bus which is only 32 bits wide and features a clock speed of 33 MHz, as opposed to accessing system memory, which is attached to a 64 bit wide bus that runs at between 100 and 266 (effective) MHz. Furthermore, accessing the primary framebuffer memory requires several synchronization steps that take many clock cycles to complete. The end result is that the Primary FB engine is several times slower than the Shadow FB engines.\hyphpar0\par\pard\sb100\li960\sl260 The Primary FB engine also has several unique issues that are difficult to program around. Development of the Primary FB engine has ceased, due to the difficulty of maintaining it, coupled with the fact that Primary FB does not run on Windows 95/98/Me and with the poor performance of Primary FB. The Primary FB source code has been left in place so that future programmers can enable it and see the poor performance of the engine for themselves.\hyphpar0\par\pard\sb216\s3\li960\sl374 {\*\bkmkstart ID_prog_45_server_45_architecture_45_input}{\*\bkmkend ID_prog_45_server_45_architecture_45_input}\b\fs28\lang1024\f1 User Input\keepn\hyphpar0\par\pard\sb144\li960\sl260 \b0\fs20\lang1033\f0 At the end of \fs18\f2 InitInput\fs20\f0  in \fs18\f2 hw/xwin/InitInput.c\fs20\f0  we open \fs18\f2 /dev/windows\fs20\f0 , a special device which becomes ready when there is anything to read on the windows message queue, and add that to the select mask for \fs18\f2 WaitForSomething\fs20\f0  using \fs18\f2 AddEnabledDevice\fs20\f0 .\hyphpar0\par\pard\sb100\li960\sl260 The X server's main loop calls the {\field{\*\fldinst   HYPERLINK  \\l ID_gloss_45_os_45_layer}{\fldrslt \i OS}} layer \fs18\f2 os/WaitFor.c\fs20\f0 's \fs18\f2 WaitForSomething\fs20\f0  function, which waits for something to happen using \fs18\f2 select\fs20\f0 . When \fs18\f2 select\fs20\f0  returns, all the wakeup handlers are run. Any queued Win32 user input messages (as well as other Win32 messages) are handled when \fs18\f2 hw/xwin/winwakeup.c\fs20\f0 's \fs18\f2 winWakeupHandler\fs20\f0  function is called. Each Win32 user input message typically queues an input event, or several input events, using the {\field{\*\fldinst   HYPERLINK  \\l ID_gloss_45_mi_45_layer}{\fldrslt \i MI}} layer's \fs18\f2 mi/mieq.c\fs20\f0 's \fs18\f2 mieqEnqueue\fs20\f0  function.\hyphpar0\par\pard\sb100\li960\sl260 Enqueued MI input events are processed when the {\field{\*\fldinst   HYPERLINK  \\l ID_gloss_45_dix_45_layer}{\fldrslt \i DIX}} layer \fs18\f2 dix/dispatch.c\fs20\f0 's \fs18\f2 Dispatch\fs20\f0  function calls \fs18\f2 hw/xwin/InitInput.c\fs20\f0 's \fs18\f2 ProcessInputEvents\fs20\f0  function, which calls \fs18\f2 mi/mieq.c\fs20\f0 's \fs18\f2 mieqProcessInputEvents\fs20\f0 .\hyphpar0\par\pard\sb200\s4\li960\sl312 {\*\bkmkstart ID_prog_45_server_45_architecture_45_input_45_keyboard}{\*\bkmkend ID_prog_45_server_45_architecture_45_input_45_keyboard}\b\fs24\lang1024\f1 Keyboard\keepn\hyphpar0\par\pard\sb120\li960\sl260 \b0\fs20\lang1033\f0 Win32 keyboard messages are processed in \fs18\f2 winwndproc.c\fs20\f0 's \fs18\f2 winWindowProc\fs20\f0 . The messages processed are:\hyphpar0\par\pard\sb100\li1160\sl260\fi-200 \tx1160 \fs16\lang1024 \'95\tab \fs20 WM_SYSKEYDOWN\hyphpar0\par\pard\sb100\li1160\sl260\fi-200 \tx1160 \fs16 \'95\tab \fs20 WM_KEYDOWN\hyphpar0\par\pard\sb100\li1160\sl260\fi-200 \tx1160 \fs16 \'95\tab \fs20 WM_SYSKEYUP\hyphpar0\par\pard\sb100\li1160\sl260\fi-200 \tx1160 \fs16 \'95\tab \fs20 WM_KEYUP\hyphpar0\par\pard\sb100\li960\sl260 \lang1033 The WM_SYSKEY* messages are generated when the user presses a key while holding down the \b Alt\b0  key or when the user presses a key after pressing and releasing the \b F10\b0  key. Processing for WM_SYSKEYDOWN and WM_KEYDOWN (and respectively WM_SYSKEYUP and WM_KEYUP) messages are identical because the X Server does not distinguish between a normal key press and a key press when the \b Alt\b0  key is down.\hyphpar0\par\pard\sb100\li960\sl260 Win32 uses virtual key codes to identify which key is being pressed or released. Virtual key codes follow the idea that the same virtual key code will be sent for keys with the same label printed on them. For example, the left and right \b Ctrl\b0  keys both generate the VK_CONTROL virtual key code. Virtual key codes are accompanied by other state information, such as the extended flag, that distinguishes between the multiple keys with the same label. For example, the left \b Ctrl\b0  key does not have the extended flag asserted, while the right \b Ctrl\b0  key does have the extended flag asserted. However, virtual key codes are not the way that key presses have traditionally been identified on personal computers and in the X Protocol.\hyphpar0\par\pard\sb100\li960\sl260 Personal computers and the X Protocol use scan codes to identify which key is being pressed. Each key on the keyboard generates a specified number when that key is pressed or released; this number is called the scan code. Scan codes are always distinct for distinct keys. For example, the left and right \b Ctrl\b0  keys generate distinct scan codes, even though their functionality is the same. Scan codes do not have additional state information, as the multiple keys with the same label will each generate a unique scan code. There is some debate as to which of virtual key codes or scan codes is the better system.\hyphpar0\par\pard\sb100\li960\sl260 The X Protocol expects that keyboard input will be based on a scan code system. There are two methods of sending a scan codes from a virtual key code message. The first method is to create a static table that links the normal and extended state of each virtual key code to a scan code. This method seems valid, but the method does not work reliably for users with non-U.S. keyboard layouts. The second method simply pulls the scan code out of the \i\fs18\f2 lParam\i0\fs20\f0  of the keyboard messages; this method works reliably for non-U.S. keyboard layouts. However, there are further concerns for non-U.S. keyboard layouts.\hyphpar0\par\pard\sb100\li960\sl260 Non-U.S. keyboard layouts typically use the right \b Alt\b0  key as an alternate shift key to access an additional row of symbols from the \b `\b0 , \b 1\b0 , \b 2\b0 , ..., \b 0\b0  keys, as well as accented forms of standard alphabetic characters, such as \'e1, \'e4, \'e5, \'fa and additional alphabetic characters, such as \'df. Non-U.S. keyboards typically label the right \b Alt\b0  key as \b AltGr\b0  or \b AltLang\b0 ; the Gr is short for \'93grave\'94, which is the name of one of the accent symbols. The X Protocol and Win32 methods of handling the \b AltGr\b0  key are not directly compatible with one another.\hyphpar0\par\pard\sb100\li960\sl260 The X Protocol handles \b AltGr\b0  presses and releases in much the same way as any other key press and release. Win32, however, generates a fake \b Ctrl\b0  press and release for each \b AltGr\b0  press and release. The X Protocol does not expect this fake \b Ctrl\b0  press and release, so care must be taken to discard the fake \b Ctrl\b0  press and release. Fake \b Ctrl\b0  presses and releases are detected and discarded by passing each keyboard message to \fs18\f2 winkeybd.c\fs20\f0 's \fs18\f2 winIsFakeCtrl_L\fs20\f0  function. \fs18\f2 winIsFakeCtrl_L\fs20\f0  detects the fake key presses and releases by comparing the timestamps of the \b AltGr\b0  message with the timestamp of any preceding or trailing \b Ctrl\b0  message. Two real key events will never have the same timestamp, but the fake key events have the same timestamp as the \b AltGr\b0  messages, so the fake messages can be easily identified.\hyphpar0\par\pard\sb100\li960\sl260 Special keyboard considerations must be handled when the Cygwin/X X Server loses or gains the keyboard focus. For example, the user can switch out of Cygwin/X, toggle the \b Num Lock\b0  key, then switch back into Cygwin/X; in this case Cygwin/X would not have received the \b Num Lock\b0  toggle message, so it will continue to function as if \b Num Lock\b0  was in its previous state. Thus, the state of any mode keys such as \b Num Lock\b0 , \b Caps Lock\b0 , \b Scroll Lock\b0 , and \b Kana Lock\b0  must be stored upon loss of keyboard focus; on regaining focus, the stored state of each mode key must then be compared to that key's current state, toggling the key if its state has changed.\hyphpar0\par\pard\sb200\s4\li960\sl312 {\*\bkmkstart ID_prog_45_server_45_architecture_45_input_45_mouse}{\*\bkmkend ID_prog_45_server_45_architecture_45_input_45_mouse}\b\fs24\lang1024\f1 Mouse\keepn\hyphpar0\par\pard\sb120\li960\sl260 \b0\fs20\lang1033\f0 Win32 mouse messages are processed in \fs18\f2 winwndproc.c\fs20\f0 's \fs18\f2 winWindowProc\fs20\f0 . The messages processed are:\hyphpar0\par\pard\sb100\li1160\sl260\fi-200 \tx1160 \fs16\lang1024 \'95\tab \fs20 WM_MOUSEMOVE\hyphpar0\par\pard\sb100\li1160\sl260\fi-200 \tx1160 \fs16 \'95\tab \fs20 WM_NCMOUSEMOVE\hyphpar0\par\pard\sb100\li1160\sl260\fi-200 \tx1160 \fs16 \'95\tab \fs20 WM_LBUTTON*\hyphpar0\par\pard\sb100\li1160\sl260\fi-200 \tx1160 \fs16 \'95\tab \fs20 WM_MBUTTON*\hyphpar0\par\pard\sb100\li1160\sl260\fi-200 \tx1160 \fs16 \'95\tab \fs20 WM_RBUTTON*\hyphpar0\par\pard\sb100\li1160\sl260\fi-200 \tx1160 \fs16 \'95\tab \fs20 WM_MOUSEWHEEL\hyphpar0\par\pard\sb100\li960\sl260 \lang1033 Handling mouse motion is relatively straight forward, with the special consideration that the Windows mouse cursor must be hidden when the mouse is moving over the client area of a Cygwin/X window; the Windows mouse cursor must be redisplayed when the mouse is moving over the non-client area of a Cygwin/X window. Win32 sends the absolute coordinates of the mouse, so we call \fs18\f2 miPointerAbsoluteCursor\fs20\f0  to change the position of the mouse.\hyphpar0\par\pard\sb100\li960\sl260 Three-button mouse emulation is supported for users that do not have a three button mouse. When three-button mouse emulation is disabled, mouse button presses and releases are handled trivially in \fs18\f2 winmouse.c\fs20\f0 's \fs18\f2 winMouseButtonsHandle\fs20\f0  by simply passing the event to \fs18\f2 mieqEnqueue\fs20\f0 . Three-button mouse emulation is quite complicated.\hyphpar0\par\pard\sb100\li960\sl260 Three-button mouse emulation is handled by starting a timer when the left or right mouse buttons are pressed; the button event is sent as a left or right mouse button event if the other button is not pressed before the timer expires. The button event is sent as an emulated middle button event if the other mouse button is pressed before the timer runs out.\hyphpar0\par\pard\sb100\li960\sl260 The mouse wheel is handled in \fs18\f2 winmouse.c\fs20\f0 's \fs18\f2 winMouseWheel\fs20\f0  by generating sequences of button 4 and button 5 presses and releases corresponding to how much the mouse wheel has moved. Win32 uses variable resolution for the mouse wheel and passes the mouse wheel motion as a delta from the wheel's previous position. The number of button clicks to send is determined by dividing the wheel delta by the distance that is considered by Win32 to be one unit of motion for the mouse wheel; any remainder of the wheel delta must be preserved and added to the next mouse wheel message.\hyphpar0\par\pard\sb200\s4\li960\sl312 {\*\bkmkstart ID_prog_45_server_45_architecture_45_other_45_windows_45_messages}{\*\bkmkend ID_prog_45_server_45_architecture_45_other_45_windows_45_messages}\b\fs24\lang1024\f1 Other Windows messages\keepn\hyphpar0\par\pard\sb120\li960\sl260 \b0\fs20\lang1033\f0 Certain other WM_ messages are also processed. TBD.\hyphpar0\par\pard\sb259\s2\sl449 {\*\bkmkstart ID_prog_45_build_45_prerequisites}{\*\bkmkend ID_prog_45_build_45_prerequisites}\b\fs34\lang1024\f1 Prerequisites for Building the Source Code\keepn\hyphpar0\par\pard\sb216\s3\li960\sl374 {\*\bkmkstart ID_prog_45_compiling_45_required_45_packages}{\*\bkmkend ID_prog_45_compiling_45_required_45_packages}\fs28 Required Packages for Building\keepn\hyphpar0\par\pard\sb144\li960\sl260 \b0\fs20\lang1033\f0 Many developer libraries and developer tools are required to build Cygwin/X. Several packages are required in addition to the default packages installed by the Cygwin installer. Following is a list of additional packages that are required to compile Cygwin/X natively in Cygwin. Note that some of these packages are meta packages that will automatically cause several other packages to be selected for installation; do not unselect any of these automatically selected packages.\hyphpar0\par\pard\sb100\li1160\sl260\fi-200 \tx1160 \fs16\lang1024 \'95\tab \fs20 Required tools:\hyphpar0\par\pard\sb100\li1160\sl260 \lang1033 binutils, bison, cygport, flex, gcc-core, git, meson, ninja, pkg-config,\hyphpar0\par\pard\sb100\li1160\sl260\fi-200 \tx1160 \fs16\lang1024 \'95\tab \fs20 Required protocol headers:\hyphpar0\par\pard\sb100\li1160\sl260 \lang1033 windowsdriproto, xorgproto\hyphpar0\par\pard\sb100\li1160\sl260\fi-200 \tx1160 \fs16\lang1024 \'95\tab \fs20 Required development libraries:\hyphpar0\par\pard\sb100\li1160\sl260 \lang1033 libfontenc-devel, libfreetype-devel, libGL-devel, libnettle-devel, libpixman1-devel, libtirpc-devel, libX11-devel, libXRes-devel, libXau-devel, libXaw-devel, libXdmcp-devel, libXext-devel, libXfont2-devel, libXi-devel, libXinerama-devel, libXmu-devel, libXpm-devel, libXrender-devel, libXtst-devel, libxcb-aux-devel, libxcb-composite-devel, libxcb-ewmh-devel, libxcb-icccm-devel, libxcb-image-devel, libxcb-keysyms-devel, libxcb-randr-devel, libxcb-render-devel, libxcb-render-util-devel, libxcb-shape-devel, libxcb-util-devel, libxcb-xfixes-devel, libxcb-xkb-devel, libxcvt-devel, libxkbfile-devel\hyphpar0\par\pard\sb100\li1160\sl260\fi-200 \tx1160 \fs16\lang1024 \'95\tab \fs20 Required miscellaneous packages:\hyphpar0\par\pard\sb100\li1160\sl260 \lang1033 font-util, ImageMagick, khronos-opengl-registry, python3-lxml, xkbcomp-devel, xtrans\hyphpar0\par\pard\sb100\li1160\sl260\fi-200 \tx1160 \fs16\lang1024 \'95\tab \fs20 Optional packages for building developer documentation:\hyphpar0\par\pard\sb100\li1160\sl260 \lang1033 docbook-xml43, doxygen, fop, xmlto, xorg-sgml-doctools\hyphpar0\par\pard\sb200\li1360\sl234 \b\fs18\lang1024\f1 Tip: \b0 Use \b setup -q -P\i\fs16\f2 packagename\i0\fs18\f1 ,\i\fs16\f2 packagename\i0\fs18\f1 ,\i\fs16\f2 etc.\b0\i0\fs18\f1  to quickly install the required packages.\hyphpar0\par\pard\sb259\s2\sl449 {\*\bkmkstart ID_prog_45_obtaining_45_source}{\*\bkmkend ID_prog_45_obtaining_45_source}\b\fs34 Obtaining the Source Code\keepn\hyphpar0\par\pard\sb216\s3\li960\sl374 {\*\bkmkstart ID_prog_45_source_45_cygwin_45_setup}{\*\bkmkend ID_prog_45_source_45_cygwin_45_setup}\fs28 Obtaining via Cygwin setup\keepn\hyphpar0\par\pard\sb144\li960\sl260 \b0\fs20\lang1033\f0 The source code for the packages distributed via Cygwin setup is also available via Cygwin setup. To install the source for the X server, run Cygwin setup and tick the 'Src?' check-box for the 'xorg-server' package.\hyphpar0\par\pard\sb100\li960\sl260 This may have multiple patches applied on top of the upstream X.Org X Window System source code, and is known to build and function on Cygwin, so this should be the starting point for new developers.\hyphpar0\par\pard\sb100\li960\sl260 On installing the source code package, setup will unpack it under /usr/src. You should find the source archive, any needed .patch files, and a .cygport file which automates the distribution configuration, build and packaging tasks.\hyphpar0\par\pard\sb200\li1360\sl234 \b\fs18\lang1024\f1 Note: \b0 Due to the large number of patches applied to the upstream source, the current source package contains a source archive prepared directly from a git repository containing those patches on top of the upstream source, rather than containing the upstream source archive and many separate patches.\hyphpar0\par\pard\sb200\li960\sl260 \fs20\lang1033\f0 The sources can unpacked and prepared using cygport as follows:\hyphpar0\par\pard\sb200\li960\sl234 \fs18\lang1024\f2 \sa0\par\fi0\sb0
Username@CygwinHost ~\sa0\par\fi0\sb0
$ cd /usr/src/xorg-server-n.nn.n-n.src\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
Username@CygwinHost /usr/src/xorg-server-n.nn.n-n.src\sa0\par\fi0\sb0
$ cygport xorg-server-n.nn.n-n.cygport prep\sa0\par\fi0\sb0
[lots of output as archive is unpacked and patches applied]\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
Username@CygwinHost /usr/src/xorg-server-n.nn.n-n.src\sa0\par\fi0\sb0
$ cygport xorg-server-n.nn.n-n.cygport compile\sa0\par\fi0\sb0
[lots of output as source is configured and built]\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
Username@CygwinHost /usr/src/xorg-server-n.nn.n-n.src\sa0\par\fi0\sb0
$ cd xorg-server-n.nn.n-n/src/xorg-server-n.nn.n/\sa0\par\fi0\sb0
[navigate to the source directory]\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
Username@CygwinHost /usr/src/xorg-server-n.nn.n-n/src/xorg-server-n.nn.n/\sa0\par\fi0\sb0
$\sa0\par\fi0\sb0
\hyphpar0\par\pard\sb200\li1360\sl234 \b\f1 Note: \b0 Alternatively you may manually untar the archive and apply any patches (in the correct order).\hyphpar0\par\pard\sb200\li1360\sl234 \b Note: \b0 For details of using cygport to generate packages for distribution, see {\field{\*\fldinst   HYPERLINK  \\l ID_prog_45_distribution}{\fldrslt the Section called \i Packaging a Cygwin/X Distribution}}\hyphpar0\par\pard\sb216\s3\li960\sl374 {\*\bkmkstart ID_prog_45_source_45_cygports}{\*\bkmkend ID_prog_45_source_45_cygports}\b\fs28 Obtaining from version control\keepn\hyphpar0\par\pard\sb144\li960\sl260 \b0\fs20\lang1033\f0 The packaging script for the packages distributed via Cygwin setup is currently held in a git repository. Intermediate versions between released packages can be obtained from there.\hyphpar0\par\pard\sb200\li960\sl234 \fs18\lang1024\f2 \sa0\par\fi0\sb0
Username@CygwinHost ~\sa0\par\fi0\sb0
$ git clone https://cygwin.com/git/cygwin-packages/xorg-server.git\sa0\par\fi0\sb0
\hyphpar0\par\pard\sb200\li960\sl260 \fs20\lang1033\f0 This will obtain a .cygport file. and any .patch files. You can then add the source archive by downloading it with cygport.\hyphpar0\par\pard\sb200\li960\sl234 \fs18\lang1024\f2 \sa0\par\fi0\sb0
Username@CygwinHost ~\sa0\par\fi0\sb0
$ cygport xorg-server-n.n.n-n.cygport download\sa0\par\fi0\sb0
\hyphpar0\par\pard\sb200\li960\sl260 \fs20\lang1033\f0 Then proceed as in {\field{\*\fldinst   HYPERLINK  \\l ID_prog_45_source_45_cygwin_45_setup}{\fldrslt the Section called \i Obtaining via Cygwin setup}}\hyphpar0\par\pard\sb216\s3\li960\sl374 {\*\bkmkstart ID_prog_45_source_45_xorg}{\*\bkmkend ID_prog_45_source_45_xorg}\b\fs28\lang1024\f1 Obtaining from X.Org\keepn\hyphpar0\par\pard\sb144\li960\sl260 \b0\fs20\lang1033\f0 Cygwin/X source code is contained in, and distributed with, the X Window System source code releases (http://xorg.freedesktop.org/wiki/Releases/Download).\hyphpar0\par\pard\sb100\li960\sl260 Anonymous read-only access to the X Window System git source (http://cgit.freedesktop.org/xorg/xserver/) tree hosted on freedesktop.org (http://freedesktop.org/Software/xorg) is available.\hyphpar0\par\pard\sb200\li960\sl234 \fs18\f2 \sa0\par\fi0\sb0
$ git clone git://anongit.freedesktop.org/git/xorg/xserver\sa0\par\fi0\sb0
\hyphpar0\par\pard\sb200\li960\sl260 \fs20\f0 You will probably want to look at the .cygport file in the source package obtained in {\field{\*\fldinst   HYPERLINK  \\l ID_prog_45_source_45_cygwin_45_setup}{\fldrslt the Section called \i Obtaining via Cygwin setup}} and check you understand if you need to use the configuration options used there.\hyphpar0\par\pard\sb100\li960\sl260 Consult the {\field{\*\fldinst   HYPERLINK  \\l ID_gloss_45_git}{\fldrslt \i git}} documentation for details on using git.\hyphpar0\par\pard\sb100\li960\sl260 The CYGWIN branch exists in git for historical reasons. Current development follows the mainline (called the \i master\i0  branch in git terminology).\hyphpar0\par\pard\sb100\li960\sl260 If you just want to look at the Cygwin/X source, use the cgit interface to the X.Org tree (http://cgit.freedesktop.org/xorg/xserver/). Most of the Cygwin/X-specific code is in the xserver/hw/xwin (http://cgit.freedesktop.org/xorg/xserver/tree/hw/xwin) directory.\hyphpar0\par\pard\sb259\s2\sl449 {\*\bkmkstart ID_prog_45_build_45_native}{\*\bkmkend ID_prog_45_build_45_native}\b\fs34\lang1024\f1 Native Compiling\keepn\hyphpar0\par\pard\sb216\s3\li960\sl374 {\*\bkmkstart ID_prog_45_compiling}{\*\bkmkend ID_prog_45_compiling}\fs28 Compiling the Source Code\keepn\hyphpar0\par\pard\sb144\li960\sl260 \b0\fs20\lang1033\f0 Change the current directory to your X Window System development directory:\hyphpar0\par\pard\sb200\li960\sl234 \fs18\lang1024\f2 \sa0\par\fi0\sb0
Username@CygwinHost ~\sa0\par\fi0\sb0
$ cd ~/xserver\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
Username@CygwinHost ~/xserver\sa0\par\fi0\sb0
$ meson _build --prefix=/usr\sa0\par\fi0\sb0
[lots of output]\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
Username@CygwinHost ~/xserver\sa0\par\fi0\sb0
$ ninja -C _build\sa0\par\fi0\sb0
[lots more output]\sa0\par\fi0\sb0
\hyphpar0\par\pard\sb200\li960\sl260 \fs20\lang1033\f0 The build is now complete.\hyphpar0\par\pard\sb200\li1360\sl234 \b\fs18\lang1024\f1 Note: \b0 You may wish to consult the .cygport file for the current configuration flags used in distributed packages\hyphpar0\par\pard\sb200\li1360\sl234 \b Note: \b0 The unpacked source occupies approximately 30MB of disk space. Building the source requires approximately an additional 220MB. On my quad-core 3.4GHz i7-4770, a full build takes about 1 minute.\hyphpar0\par\pard\sb216\s3\li960\sl374 {\*\bkmkstart ID_prog_45_compiling_45_executing}{\*\bkmkend ID_prog_45_compiling_45_executing}\b\fs28 Running a local build\keepn\hyphpar0\par\pard\sb144\li960\sl260 \b0\fs20\lang1033\f0 Follow these steps to run the built X server:\hyphpar0\par\pard\sb100\li1320\sl260\fi-360 \tqr\tx1270\tx1320\tab \lang1024 1.\tab Change the current directory to your X Window System development directory:\hyphpar0\par\pard\sb100\li1320\sl234 \fs18\f2 \sa0\par\fi0\sb0
Username@CygwinHost ~\sa0\par\fi0\sb0
$ cd xserver\sa0\par\fi0\sb0
Username@CygwinHost ~/xserver\sa0\par\fi0\sb0
$\sa0\par\fi0\sb0
\hyphpar0\par\pard\sb100\li1320\sl260\fi-360 \tqr\tx1270\tx1320\tab \fs20\f0 2.\tab Invoke the hw/xwin/Xwin executable:\hyphpar0\par\pard\sb100\li1320\sl234 \fs18\f2 \sa0\par\fi0\sb0
Username@CygwinHost ~/xserver\sa0\par\fi0\sb0
$ _build/hw/xwin/XWin\sa0\par\fi0\sb0
\hyphpar0\par\pard\sb100\li1320\sl260 \fs20\lang1033\f0 The X server you have built will now attempt to run.\hyphpar0\par\pard\sb216\s3\li960\sl374 {\*\bkmkstart ID_prog_45_compiling_45_install}{\*\bkmkend ID_prog_45_compiling_45_install}\b\fs28\lang1024\f1 Installing a local build\keepn\hyphpar0\par\pard\sb144\li960\sl260 \b0\fs20\lang1033\f0 Installing a local build installs the built X server(s) and associated man pages.\hyphpar0\par\pard\sb100\li1320\sl260\fi-360 \tqr\tx1270\tx1320\tab \lang1024 1.\tab Change the current directory to your X Window System development directory:\hyphpar0\par\pard\sb100\li1320\sl234 \fs18\f2 \sa0\par\fi0\sb0
Username@CygwinHost ~\sa0\par\fi0\sb0
$ cd ~/xserver\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
Username@CygwinHost ~/xserver\sa0\par\fi0\sb0
$\sa0\par\fi0\sb0
\hyphpar0\par\pard\sb100\li1320\sl260\fi-360 \tqr\tx1270\tx1320\tab \fs20\f0 2.\tab Use the \b\fs18\f2 install\b0\fs20\f0  target, which installs everything:\hyphpar0\par\pard\sb100\li1320\sl234 \fs18\f2 \sa0\par\fi0\sb0
Username@CygwinHost ~/xserver\sa0\par\fi0\sb0
$ ninja -C _build install\sa0\par\fi0\sb0
\hyphpar0\par\pard\sb259\s2\sl449 {\*\bkmkstart ID_prog_45_build_45_cross}{\*\bkmkend ID_prog_45_build_45_cross}\b\fs34\f1 Cross Compiling\keepn\hyphpar0\par\pard\sb173\li960\sl260 \b0\fs20\lang1033\f0 Cross compiling is the act of the building source code on one system, the build host, into executables or libraries to be run on a different host, the target host. The build host and the target host may differ in operating system and/or processor type.\hyphpar0\par\pard\sb100\li960\sl260 Cross compiling is much trickier than building on the native host. There are a whole new class of problems that can happen when cross compiling that are simply not an issue when building on Cygwin. You should be familiar with building Cygwin/X on Cygwin, as described in {\field{\*\fldinst   HYPERLINK  \\l ID_prog_45_build_45_native}{\fldrslt the Section called \i Native Compiling}}, before attempting to cross compile Cygwin/X.\hyphpar0\par\pard\sb100\li960\sl260 See {\field{\*\fldinst   HYPERLINK  \\l ID_cross}{\fldrslt Appendix A}} for notes on building a cross compiler.\hyphpar0\par\pard\sb216\s3\li960\sl374 {\*\bkmkstart ID_prog_45_cross_45_build}{\*\bkmkend ID_prog_45_cross_45_build}\b\fs28\lang1024\f1 Building Cygwin/X\keepn\hyphpar0\par\pard\sb144\li960\sl260 \b0\fs20\lang1033\f0 Building the source code when cross compiling X Window System is nearly identical to the process described below in {\field{\*\fldinst   HYPERLINK  \\l ID_prog_45_build_45_native}{\fldrslt the Section called \i Native Compiling}} of the Native Compiling section. One divergence from the aforementioned instructions is that you will be using a \b bash\b0  shell on your cross compiling host, rather than on your native Cygwin host.\hyphpar0\par\pard\sb100\li1320\sl260\fi-360 \tqr\tx1270\tx1320\tab \lang1024 1.\tab When configuring, you must pass \i\fs18\f2 --cross-file=\fs16 crossfile\i0\fs20\f0  , pointing to a suitable cross file, to \b meson\b0 , to cause the build system to build for the target, Cygwin, platform:\hyphpar0\par\pard\sb100\li1320\sl260\fi-360 \tqr\tx1270\tx1320\tab 2.\tab When installing a build, you must use \i\fs18\f2 DESTDIR=/stagingdir\i0\fs20\f0  with \b ninja install\b0  to install the target platform build into \fs18\f2 /stagingdir\fs20\f0 .\hyphpar0\par\pard\sb200\li1720\sl234 \b\fs18\f1 Tip: \b0 Never run \b ninja install\b0  on your host platform without the \i\fs16\f2 DESTDIR\i0\fs18\f1 , as that will cause the Cygwin build of X Window System to be installed over top of your local X Window System installation, which would completely destroy your host system's X Window System installation.\hyphpar0\par\pard\sb200\li1320\sl260 \fs20\lang1033\f0 OR, when configuring, you can pass \i\fs18\f2 --prefix=/stagingdir\i0\fs20\f0  to cause the build system to be configured to install the target platform build into \fs18\f2 /stagingdir\fs20\f0 . This avoids the possibilty of installing over the native installation, at the cost of baking the prefix \fs18\f2 /stagingdir\fs20\f0  into the target binaries.\hyphpar0\par\pard\sb259\s2\sl449 {\*\bkmkstart ID_prog_45_patches}{\*\bkmkend ID_prog_45_patches}\b\fs34\lang1024\f1 Contributing Patches\keepn\hyphpar0\par\pard\sb173\li960\sl260 \b0\fs20\lang1033\f0 Submit patches for Cygwin/X source code and documentation to the cygwin@cygwin.com mailing list. All patches are thoughtfully considered.\hyphpar0\par\pard\sb100\li960\sl260 Please ensure your editor of choice both understands and preserves UNIX-style end of line characters.\hyphpar0\par\pard\sb100\li960\sl260 Please ensure patches are in unified diff format (e.g. using \b diff -u\b0 )\hyphpar0\par\pard\sb259\s2\sl449 {\*\bkmkstart ID_prog_45_distribution}{\*\bkmkend ID_prog_45_distribution}\b\fs34\lang1024\f1 Packaging a Cygwin/X Distribution\keepn\hyphpar0\par\pard\sb173\li960\sl260 \b0\fs20\lang1033\f0 Cygwin/X uses a cygport build and packaging script that automates all of the tasks required to build, create binary packages, and source code packages.\hyphpar0\par\pard\sb200\li1360\sl234 \b\fs18\lang1024\f1 Note: \b0 These instructions assume that you want to build a distribution from the source packages available from Cygwin's setup program.\hyphpar0\par\pard\sb100\li1360\sl234 You can a similar technique to build a distribution from locally modified sources, cygwin-ports git or an X.Org release tarball instead.\hyphpar0\par\pard\sb200\li1320\sl260\fi-360 \tqr\tx1270\tx1320\tab \fs20\f0 1.\tab Use Cygwin setup to install the xorg-server source package, it will be automatically unpacked under \fs18\f2 /usr/src\hyphpar0\par\pard\sb100\li1320\sl260\fi-360 \tqr\tx1270\tx1320\tab \fs20\f0 2.\tab Invoke cygport on the .cygport file contained in the source package installed above. This will create the source and binary packages \fs18\f2 xorg-server-n.nn.n-X-src.tar.bz2\fs20\f0  and \fs18\f2 xorg-server-n.nn.n-X.tar.bz2\fs20\f0  \hyphpar0\par\pard\sb100\li1320\sl234 \fs18\f2 \sa0\par\fi0\sb0
Username@CygwinHost /usr/src/xorg-server-x.xx.x-x.src/\sa0\par\fi0\sb0
$ cygport xorg-server-x.xx.x-x.cygport all\sa0\par\fi0\sb0
\hyphpar0\par\pard\sb259\s2\sl449 {\*\bkmkstart ID_prog_45_reference}{\*\bkmkend ID_prog_45_reference}\b\fs34\f1 Reference Documentation\keepn\hyphpar0\par\pard\sb173\li960\sl260 \b0\fs20\lang1033\f0 X developer reference documentation.\hyphpar0\par\pard\sb216\s3\li960\sl374 {\*\bkmkstart ID_xorg_45_docs}{\*\bkmkend ID_xorg_45_docs}\b\fs28\lang1024\f1 X.Org documents\keepn\hyphpar0\par\pard\sb144\li960\sl260 \b0\fs20\lang1033\f0 Offical X.Org documentation.\hyphpar0\par\pard\sb100\li960\sl260 Print versions of various X Window System Manuals also exist.\hyphpar0\par\pard\sb100\li1160\sl260\fi-200 \tx1160 \fs16\lang1024 \'95\tab \fs20  Definition of the Porting Layer for the X V11 Sample Server (http://www.x.org/releases/X11R7.5/doc/core/Xserver-spec.pdf)\hyphpar0\par\pard\sb100\li1160\sl260 \lang1033 Essential reading.\hyphpar0\par\pard\sb100\li1160\sl260 The current version of this document is available in the xorg-docs package.\hyphpar0\par\pard\sb100\li1160\sl260\fi-200 \tx1160 \fs16\lang1024 \'95\tab \fs20  Xlib - C Language X Interface (http://www.x.org/docs/X11/xlib.pdf)\hyphpar0\par\pard\sb100\li1160\sl260 \lang1033 The current version of this document is available in the libX11 runtime package.\hyphpar0\par\pard\sb100\li1160\sl260\fi-200 \tx1160 \fs16\lang1024 \'95\tab \fs20  X Protocol (http://www.x.org/docs/XProtocol/proto.pdf)\hyphpar0\par\pard\sb100\li1160\sl260\fi-200 \tx1160 \fs16 \'95\tab \fs20  X Inter-Client Communication Conventions (http://www.x.org/docs/ICCCM/icccm.pdf)\hyphpar0\par\pard\sb100\li1160\sl260\fi-200 \tx1160 \fs16 \'95\tab \fs20  X Logical Font Description Conventions (http://www.x.org/docs/XLFD/xlfd.pdf)\hyphpar0\par\pard\sb216\s3\li960\sl374 {\*\bkmkstart ID_unoffical_45_docs}{\*\bkmkend ID_unoffical_45_docs}\b\fs28\f1 Further reading\keepn\hyphpar0\par\pard\sb144\li960\sl260 \b0\fs20\lang1033\f0 Other documents of interest.\hyphpar0\par\pard\sb100\li1160\sl260\fi-200 \tx1160 \fs16\lang1024 \'95\tab \fs20  The X Selection Mechanism or, How to Cut and Paste in 1000 lines or more (http://x.cygwin.com/docs/cg/porting-docs/selection.pdf) (40 KiB, 13 pages)\hyphpar0\par\pard\sb100\li1160\sl260 \lang1033 1990 - Good information/tutorial about the X selection mechanism. From Papers and Talks by Keith Packard (http://keithp.com/~keithp/talks/) converted to PDF\hyphpar0\par\pard\sb216\s3\li960\sl374 {\*\bkmkstart ID_x_45_server_45_porting_45_docs}{\*\bkmkend ID_x_45_server_45_porting_45_docs}\b\fs28\lang1024\f1 X server porting documents\keepn\hyphpar0\par\pard\sb144\li960\sl260 \b0\fs20\lang1033\f0 Other documents about X server porting.\hyphpar0\par\pard\sb100\li1160\sl260\fi-200 \tx1160 \fs16\lang1024 \'95\tab \fs20  Strategies for Porting the X V11 Sample Server (http://x.cygwin.com/docs/cg/porting-docs/strat.pdf) (77 KiB, 22 pages)\hyphpar0\par\pard\sb100\li1160\sl260 \lang1033 1998 - Mainly of historical interest now, but might give you some insight\hyphpar0\par\pard\sb100\li1160\sl260\fi-200 \tx1160 \fs16\lang1024 \'95\tab \fs20 Godzilla's Guide to Porting the X V11 Sample Server (http://x.cygwin.com/docs/cg/porting-docs/gdz.pdf) (38 KiB, 11 pages)\hyphpar0\par\pard\sb100\li1160\sl260 \lang1033 1990 - Old and thin, but relevant\hyphpar0\par\pard\sb100\li1160\sl260\fi-200 \tx1160 \fs16\lang1024 \'95\tab \fs20  Design of eXcursion Version 2 for Windows, Windows NT, and Windows 95 (http://x.cygwin.com/docs/cg/porting-docs/eXcursion2.pdf) (301 KiB, 14 pages)\hyphpar0\par\pard\sb100\li1160\sl260 \lang1033 1996 - Discusses some of the difficulties in creating an X Server for Microsoft Windows. More geared towards implementing a server that translates X raster ops into Windows GDI raster ops. Cygwin/X does not currently translate raster ops, though the framework to do so is in place, and development on raster op translation could be resumed in the future.\hyphpar0\par\pard\sb100\li1160\sl260\fi-200 \tx1160 \fs16\lang1024 \'95\tab \fs20  Writing a Graphics Device Driver and DDX for the Digital UNIX X Server (http://x.cygwin.com/docs/cg/porting-docs/xikdoc.pdf) (602 KiB, 272 pages)\hyphpar0\par\pard\sb100\li1160\sl260 \lang1033 1997 - Contains some good hints in the DDX section\hyphpar0\par\sect\sectd\plain\pgwsxn12240\pghsxn15840\marglsxn1440\margrsxn1440\margtsxn1440\margbsxn1920\headery0\footery0\pgndec\titlepg{\headerf\pard\sl-240\sb770\sa430\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {}\par}{\footerf\pard\sl-240\sb770\sa910\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {\i\fs20 \chpgn }\par}{\headerl\pard\sl-240\sb770\sa430\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {\i\fs20 Chapter 3. Documentation}\par}{\footerl\pard\sl-240\sb770\sa910\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {\i\fs20 \chpgn }\par}{\headerr\pard\sl-240\sb770\sa430\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {\i\fs20 Chapter 3. Documentation}\par}{\footerr\pard\sl-240\sb770\sa910\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {\i\fs20 \chpgn }\par}\pard\sb311\s1\sl539 {\*\bkmkstart ID_documentation}{\*\bkmkend ID_documentation}\b\fs41\f1 Chapter 3. Documentation\keepn\hyphpar0\par\pard\sb259\s2\sl449 {\*\bkmkstart ID_docs_45_overview}{\*\bkmkend ID_docs_45_overview}\fs34 Overview\keepn\hyphpar0\par\pard\sb173\li960\sl260 \b0\fs20\lang1033\f0 Cygwin/X documentation is written in XML according to the DocBook (http://docbook.org/) document type definition (DTD). These XML input files are then compiled using an autoconf and automake build system. We currently build the following output formats: HTML, PDF, PS, RTF, and TXT.\hyphpar0\par\pard\sb259\s2\sl449 {\*\bkmkstart ID_docs_45_obtaining_45_source}{\*\bkmkend ID_docs_45_obtaining_45_source}\b\fs34\lang1024\f1 Obtaining the Source Code\keepn\hyphpar0\par\pard\sb216\s3\li960\sl374 {\*\bkmkstart ID_docs_45_obtaining_45_source_45_release}{\*\bkmkend ID_docs_45_obtaining_45_source_45_release}\fs28 Source of latest cygwin-x-doc release\keepn\hyphpar0\par\pard\sb144\li960\sl260 \b0\fs20\lang1033\f0 To obtain the source of the latest release of the cygwin-x-doc package start the cygwin setup program, and select the package cygwin-x-doc from the category X11. Mark the checkbox labelled src and install. This will install the documentation source in /usr/src/cygwin-x-doc.\hyphpar0\par\pard\sb216\s3\li960\sl374 {\*\bkmkstart ID_docs_45_obtaining_45_source_45_git}{\*\bkmkend ID_docs_45_obtaining_45_source_45_git}\b\fs28\lang1024\f1 Source from git\keepn\hyphpar0\par\pard\sb144\li960\sl260 \b0\fs20\lang1033\f0 The documentation source code is available from sourceware.org \b git\b0 . To obtain it, please use the following commands: \hyphpar0\par\pard\sb200\li960\sl234 \fs18\f2 \sa0\par\fi0\sb0
$ git clone git://sourceware.org/git/cygwin-apps/xorg-doc.git\sa0\par\fi0\sb0
[output as files are checked out]\sa0\par\fi0\sb0
$ (cd xorg-doc && autoreconf)\sa0\par\fi0\sb0
[output as autoconfiguration scripts are regenerated]\sa0\par\fi0\sb0
\hyphpar0\par\pard\sb200\li960\sl260 \fs20\f0 You should now have the sources in a directory called xorg-doc.\hyphpar0\par\pard\sb100\li960\sl260 If you just want to look at the Cygwin/X documentation source, use the web interface to the Cygwin/X documentation tree (http://sourceware.org/git/gitweb.cgi?p=cygwin-apps/xorg-doc.git).\hyphpar0\par\pard\sb259\s2\sl449 {\*\bkmkstart ID_docs_45_docbook}{\*\bkmkend ID_docs_45_docbook}\b\fs34\lang1024\f1 Setting Up a DocBook Build Environment\keepn\hyphpar0\par\pard\sb173\li960\sl260 \b0\fs20\lang1033\f0 Setup a DocBook build environment on Cygwin\hyphpar0\par\pard\sb216\s3\li960\sl374 {\*\bkmkstart ID_prog_45_docbook_45_required_45_packages}{\*\bkmkend ID_prog_45_docbook_45_required_45_packages}\b\fs28\lang1024\f1 Required Packages for building documentation\keepn\hyphpar0\par\pard\sb144\li1160\sl260\fi-200 \tx1160 \b0\fs16\f0 \'95\tab \fs20 openjade\hyphpar0\par\pard\sb100\li1160\sl260\fi-200 \tx1160 \fs16 \'95\tab \fs20 openSP\hyphpar0\par\pard\sb100\li1160\sl260\fi-200 \tx1160 \fs16 \'95\tab \fs20 texlive-collection-htmlxml, texlive-collection-genericrecommended, texlive-collection-latexrecommended (for jadetex)\hyphpar0\par\pard\sb100\li1160\sl260\fi-200 \tx1160 \fs16 \'95\tab \fs20 docbook-dsssl\hyphpar0\par\pard\sb100\li1160\sl260\fi-200 \tx1160 \fs16 \'95\tab \fs20 lynx (for converting html to text)\hyphpar0\par\pard\sb100\li1160\sl260\fi-200 \tx1160 \fs16 \'95\tab \fs20 ImageMagick (for converting .png figures to .ps)\hyphpar0\par\pard\sb259\s2\sl449 {\*\bkmkstart ID_docs_45_build}{\*\bkmkend ID_docs_45_build}\b\fs34\f1 Building the Documentation\keepn\hyphpar0\par\pard\sb173\li960\sl260 \b0\fs20\lang1033\f0 Follow these instructions to build the Cygwin/X documentation source code:\hyphpar0\par\pard\sb100\li1320\sl260\fi-360 \tqr\tx1270\tx1320\tab \lang1024 1.\tab Open a shell on your documentation build host; you should see a window like the following:\hyphpar0\par\pard\sb100\li1320\sl234 \fs18\f2 \sa0\par\fi0\sb0
Username@CygwinHost ~\sa0\par\fi0\sb0
$ \sa0\par\fi0\sb0
\hyphpar0\par\pard\sb100\li1320\sl260\fi-360 \tqr\tx1270\tx1320\tab \fs20\f0 2.\tab Change the current directory to the documentation source code directory:\hyphpar0\par\pard\sb100\li1320\sl234 \fs18\f2 \sa0\par\fi0\sb0
Username@CygwinHost ~\sa0\par\fi0\sb0
$ cd cygwin-x-doc-1.0.0\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
Username@CygwinHost ~/cygwin-x-doc-1.0.0\sa0\par\fi0\sb0
$ \sa0\par\fi0\sb0
\hyphpar0\par\pard\sb100\li1320\sl260\fi-360 \tqr\tx1270\tx1320\tab \fs20\f0 3.\tab Create a \fs18\f2 build\fs20\f0  directory and change the current directory to that directory:\hyphpar0\par\pard\sb100\li1320\sl234 \fs18\f2 \sa0\par\fi0\sb0
Username@CygwinHost ~/cygwin-x-doc-1.0.0\sa0\par\fi0\sb0
$ mkdir build\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
Username@CygwinHost ~/cygwin-x-doc-1.0.0\sa0\par\fi0\sb0
$ cd build\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
Username@CygwinHost ~/cygwin-x-doc-1.0.0/build\sa0\par\fi0\sb0
$ \sa0\par\fi0\sb0
\hyphpar0\par\pard\sb100\li1320\sl260\fi-360 \tqr\tx1270\tx1320\tab \fs20\f0 4.\tab Configure the documentation source code:\hyphpar0\par\pard\sb100\li1320\sl234 \fs18\f2 \sa0\par\fi0\sb0
Username@CygwinHost ~/cygwin-x-doc-1.0.0/build\sa0\par\fi0\sb0
$ ../configure\sa0\par\fi0\sb0
\hyphpar0\par\pard\sb200\li1720\sl234 \b\f1 Note: \b0 Use \b ./configure --enable-hardcopy\b0  to enable building of all documentation formats, otherwise just HTML will be built\hyphpar0\par\pard\sb200\li1320\sl260\fi-360 \tqr\tx1270\tx1320\tab \fs20\f0 5.\tab Build the documentation:\hyphpar0\par\pard\sb100\li1320\sl234 \fs18\f2 \sa0\par\fi0\sb0
Username@CygwinHost ~/cygwin-x-doc-1.0.0/build\sa0\par\fi0\sb0
$ make all\sa0\par\fi0\sb0
\hyphpar0\par\pard\sb100\li1320\sl260\fi-360 \tqr\tx1270\tx1320\tab \fs20\f0 6.\tab Building the documentation is now complete.\hyphpar0\par\pard\sb259\s2\sl449 {\*\bkmkstart ID_docs_45_distribution}{\*\bkmkend ID_docs_45_distribution}\b\fs34\f1 Packaging a Documentation Distribution\keepn\hyphpar0\par\pard\sb173\li960\sl260 \b0\fs20\lang1033\f0 Follow these instructions to build a Cygwin/X documentation source code distribution:\hyphpar0\par\pard\sb100\li1320\sl260\fi-360 \tqr\tx1270\tx1320\tab \lang1024 1.\tab Edit the version tag in the file \fs18\f2 configure.ac\fs20\f0  to indicate a new version. The line containing the version tag should look like:\hyphpar0\par\pard\sb100\li1320\sl234 \fs18\f2 \sa0\par\fi0\sb0
AC_INIT(cygwin-x-doc, 1.0.0)\sa0\par\fi0\sb0
\hyphpar0\par\pard\sb100\li1320\sl260\fi-360 \tqr\tx1270\tx1320\tab \fs20\f0 2.\tab Commit this change to \b git\b0  and apply an appropriate tag: \hyphpar0\par\pard\sb100\li1320\sl234 \fs18\f2 \sa0\par\fi0\sb0
Username@CygwinHost ~/cygwin-x-doc-1.0.0\sa0\par\fi0\sb0
$ git add configure.ac\sa0\par\fi0\sb0
Username@CygwinHost ~/cygwin-x-doc-1.0.0\sa0\par\fi0\sb0
$ git commit -m "Bump version to 1.0.0"\sa0\par\fi0\sb0
[...]\sa0\par\fi0\sb0
Username@CygwinHost ~/cygwin-x-doc-1.0.0\sa0\par\fi0\sb0
$ git tag VERSION_1_0_0\sa0\par\fi0\sb0
\hyphpar0\par\pard\sb100\li1320\sl260\fi-360 \tqr\tx1270\tx1320\tab \fs20\f0 3.\tab Change the current directory to the documentation source code build directory:\hyphpar0\par\pard\sb100\li1320\sl234 \fs18\f2 \sa0\par\fi0\sb0
Username@CygwinHost ~/cygwin-x-doc-1.0.0\sa0\par\fi0\sb0
$ cd cygwin-x-doc-1.0.0/build\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
Username@CygwinHost ~/cygwin-x-doc-1.0.0/build\sa0\par\fi0\sb0
$\sa0\par\fi0\sb0
\hyphpar0\par\pard\sb100\li1320\sl260\fi-360 \tqr\tx1270\tx1320\tab \fs20\f0 4.\tab Build the documentation source code distribution:\hyphpar0\par\pard\sb100\li1320\sl234 \fs18\f2 \sa0\par\fi0\sb0
Username@CygwinHost ~/cygwin-x-doc-1.0.0/build\sa0\par\fi0\sb0
$ make distcheck\sa0\par\fi0\sb0
\hyphpar0\par\pard\sb100\li1320\sl260\fi-360 \tqr\tx1270\tx1320\tab \fs20\f0 5.\tab The documentation source code distribution should now be contained in the current directory in a file called \fs18\f2 cygwin-x-doc-1.0.0.tar.bz2\fs20\f0 .\hyphpar0\par\pard\sb100\li1320\sl260\fi-360 \tqr\tx1270\tx1320\tab 6.\tab Packaging the documentation is now complete.\hyphpar0\par\sect\sectd\plain\pgwsxn12240\pghsxn15840\marglsxn1440\margrsxn1440\margtsxn1440\margbsxn1920\headery0\footery0\pgndec\titlepg{\headerf\pard\sl-240\sb770\sa430\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {}\par}{\footerf\pard\sl-240\sb770\sa910\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {\i\fs20 \chpgn }\par}{\headerl\pard\sl-240\sb770\sa430\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {\i\fs20 Chapter 4. Web Site Maintenance}\par}{\footerl\pard\sl-240\sb770\sa910\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {\i\fs20 \chpgn }\par}{\headerr\pard\sl-240\sb770\sa430\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {\i\fs20 Chapter 4. Web Site Maintenance}\par}{\footerr\pard\sl-240\sb770\sa910\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {\i\fs20 \chpgn }\par}\pard\sb311\s1\sl539 {\*\bkmkstart ID_website}{\*\bkmkend ID_website}\b\fs41\f1 Chapter 4. Web Site Maintenance\keepn\hyphpar0\par\pard\sb207\li960\sl260 \b0\fs20\lang1033\f0 The Cygwin/X web site is stored in sourceware.org \b git\b0 . The repository is \fs18\f2 git://sourceware.org/git/cygwin-htdocs.git\fs20\f0  and the path is \fs18\f2 htdocs/xfree/\hyphpar0\par\pard\sb259\s2\sl449 {\*\bkmkstart ID_updating_45_documentation_45_on_45_website}{\*\bkmkend ID_updating_45_documentation_45_on_45_website}\b\fs34\lang1024\f1 Updating the documentation on the web site\keepn\hyphpar0\par\pard\sb173\li960\sl260 \b0\fs20\lang1033\f0 A relatively simple way of updating the documentation shown on the web site from the cygwin-x-doc sources is to build the documentation, then install it into a \b git\b0  checkout of the web site, and then check that in, e.g.:\hyphpar0\par\pard\sb200\li960\sl234 \fs18\lang1024\f2 \sa0\par\fi0\sb0
$ cd path-to-website-checkout\sa0\par\fi0\sb0
$ git clone ssh://user@sourceware.org/git/cygwin-htdocs.git\sa0\par\fi0\sb0
$ cd path-to-cygwin-x-doc-checkout\sa0\par\fi0\sb0
$ ./configure --enable-hardcopy --with-docdir=path-to-website-checkout/htdocs/xfree/docs\sa0\par\fi0\sb0
$ make\sa0\par\fi0\sb0
[...]\sa0\par\fi0\sb0
$ make install\sa0\par\fi0\sb0
[...]\sa0\par\fi0\sb0
$ cd path-to-website-checkout/htdocs/xfree/docs\sa0\par\fi0\sb0
$ git add --all\sa0\par\fi0\sb0
$ git commit -m "Rebuild X documentation"\sa0\par\fi0\sb0
\hyphpar0\par\sect\sectd\plain\pgwsxn12240\pghsxn15840\marglsxn1440\margrsxn1440\margtsxn1440\margbsxn1920\headery0\footery0\pgndec\titlepg{\headerf\pard\sl-240\sb770\sa430\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {}\par}{\footerf\pard\sl-240\sb770\sa910\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {\i\fs20 \chpgn }\par}{\headerl\pard\sl-240\sb770\sa430\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {\i\fs20 Bibliography}\par}{\footerl\pard\sl-240\sb770\sa910\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {\i\fs20 \chpgn }\par}{\headerr\pard\sl-240\sb770\sa430\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {\i\fs20 Bibliography}\par}{\footerr\pard\sl-240\sb770\sa910\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {\i\fs20 \chpgn }\par}\pard\sb311\s1\sl539 {\*\bkmkstart ID_biblio}{\*\bkmkend ID_biblio}\b\fs41\f1 Bibliography\keepn\hyphpar0\par\pard\sb259\s2\sl449 {\*\bkmkstart ID_biblio_45_articles}{\*\bkmkend ID_biblio_45_articles}\fs34 Articles\keepn\hyphpar0\par\pard\sb173\li1440\sl260\fi-480 {\*\bkmkstart ID_porting_45_layer_45_definition}{\*\bkmkend ID_porting_45_layer_45_definition}\b0\fs20\f0 [Angebranndt94]\~\i Definition of the Porting Layer for the X v11 Sample Server\i0 , Angebranndt94, Susan Angebranndt, Raymond Drewry, Philip Karlton, Todd Newman, Robert W. Scheifler, Keith Packard, and David P. Wiggins, 1994.\hyphpar0\par\pard\sb259\s2\sl449 {\*\bkmkstart ID_biblio_45_books}{\*\bkmkend ID_biblio_45_books}\b\fs34\f1 Books\keepn\hyphpar0\par\pard\sb173\li1440\sl260\fi-480 {\*\bkmkstart ID_complete_45_reference}{\*\bkmkend ID_complete_45_reference}\b0\fs20\f0 [ScheiflerGettys92]\~Robert W. Scheifler, James Gettys, Jim Flowers, and David Rosenthal, 1992, 1-55558-088-2, Butterworth-Heinemann, \i X Window System: The Complete Reference to Xlib, X Protocol, ICCCM, and XLFD\i0 .\hyphpar0\par\pard\sb100\li1440\sl260\fi-480 {\*\bkmkstart ID_programming_45_applications_45_for_45_windows}{\*\bkmkend ID_programming_45_applications_45_for_45_windows}[Richter99]\~Jeffrey Richter, 1999, 1-57231-996-8, Microsoft Press, \i Programming Applications for Microsoft Windows: Mastering the critical building blocks of 32-bit and 64-bit Windows-based applications\i0 .\hyphpar0\par\pard\sb100\li1440\sl260\fi-480 {\*\bkmkstart ID_pgoramming_45_windows_45_petzold}{\*\bkmkend ID_pgoramming_45_windows_45_petzold}[Petzold99]\~Charles Petzold, 1999, 1-57231-995-X, Microsoft Press, \i Programming Windows: The definitive guide to the Win32 API\i0 .\hyphpar0\par\pard\sb100\li1440\sl260\fi-480 {\*\bkmkstart ID_developing_45_ui_45_for_45_windows}{\*\bkmkend ID_developing_45_ui_45_for_45_windows}[McKay99]\~Everett N. McKay, 1999, 0-7356-0586-6, Microsoft Press, \i Developing User Interfaces for Microsoft Windows: Practical and effective methods for improving the user experience\i0 .\hyphpar0\par\pard\sb100\li1440\sl260\fi-480 {\*\bkmkstart ID_network_45_programming_45_for_45_windows}{\*\bkmkend ID_network_45_programming_45_for_45_windows}[JonesOhlund99]\~Anthony Jones and Jim Ohlund, 1999, 0-7356-0560-2, Microsoft Press, \i Network Programming for Microsoft Windows: Clear, practical guide to Microsoft's networking APIs\i0 .\hyphpar0\par\pard\sb100\li1440\sl260\fi-480 {\*\bkmkstart ID_windows_45_graphics_45_programming}{\*\bkmkend ID_windows_45_graphics_45_programming}[Yuan01]\~Feng Yuan, 2001, 0-13-086985-6, Prentice Hall PTR, \i Windows Graphics Programming: Win32 GDI and DirectDraw\i0 .\hyphpar0\par\pard\sb100\li1440\sl260\fi-480 {\*\bkmkstart ID_win32_45_multithreaded_45_programming}{\*\bkmkend ID_win32_45_multithreaded_45_programming}[CohenWoodring98]\~Aaron Cohen and Mike Woodring, 1998, 1-56592-296-4, O'Reilly & Associates, Inc., \i Win32 Multithreaded Programming: Building Thread-Safe Applications\i0 .\hyphpar0\par\pard\sb100\li1440\sl260\fi-480 {\*\bkmkstart ID_learning_45_gnu_45_emacs}{\*\bkmkend ID_learning_45_gnu_45_emacs}[CameronRosenblattRaymond96]\~Debra Cameron, Bill Rosenblatt, and Eric Raymond, 1996, 1991, 1-56592-152-6, O'Reilly & Associates, Inc., \i Learning GNU Emacs: UNIX Text Processing\i0 .\hyphpar0\par\pard\sb100\li1440\sl260\fi-480 {\*\bkmkstart ID_posix_45_programmers_45_guide}{\*\bkmkend ID_posix_45_programmers_45_guide}[Lewine91]\~Edited by Dale Dougherty, Donald A. Lewine, 1991, 0-937175-73-0, O'Reilly & Associates, Inc., \i POSIX Programmer's Guide: Writing Portable UNIX Programs\i0 .\hyphpar0\par\pard\sb100\li1440\sl260\fi-480 {\*\bkmkstart ID_k_45_and_45_r}{\*\bkmkend ID_k_45_and_45_r}[KernighanRitchie88]\~Brian W. Kernighan and Dennis M. Ritchie, 1988, 1978, 0-13-110370-9, Prentice Hall PTR, \i The C Programming Language: ANSI C\i0 .\hyphpar0\par\sect\sectd\plain\pgwsxn12240\pghsxn15840\marglsxn1440\margrsxn1440\margtsxn1440\margbsxn1920\headery0\footery0\pgndec\titlepg{\headerf\pard\sl-240\sb770\sa430\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {}\par}{\footerf\pard\sl-240\sb770\sa910\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {\i\fs20 \chpgn }\par}{\headerl\pard\sl-240\sb770\sa430\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {\i\fs20 Glossary}\par}{\footerl\pard\sl-240\sb770\sa910\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {\i\fs20 \chpgn }\par}{\headerr\pard\sl-240\sb770\sa430\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {\i\fs20 Glossary}\par}{\footerr\pard\sl-240\sb770\sa910\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {\i\fs20 \chpgn }\par}\pard\sb311\s1\sl539 {\*\bkmkstart ID_glossary}{\*\bkmkend ID_glossary}\b\fs41\f1 Glossary\keepn\hyphpar0\par\pard\sb311\s1\sl539 {\*\bkmkstart ID_glossary_45_b}{\*\bkmkend ID_glossary_45_b}B\keepn\hyphpar0\par\pard\sb207\s3\li960\sl260 {\*\bkmkstart ID_gloss_45_bitmap_45_win32}{\*\bkmkend ID_gloss_45_bitmap_45_win32}\fs20 Bitmap (Win32)\keepn\hyphpar0\par\pard\sb100\li1360\sl260 \b0\lang1033\f0 Windows pixel map.\hyphpar0\par\pard\sb150\s3\li960\sl260 {\*\bkmkstart ID_gloss_45_bitmap_45_x}{\*\bkmkend ID_gloss_45_bitmap_45_x}\b\lang1024\f1 Bitmap (X)\keepn\hyphpar0\par\pard\sb100\li1360\sl260 \b0\lang1033\f0 X pixel map with bit depth equal to one. X pixel maps of bit depth not equal to one are called {\field{\*\fldinst   HYPERLINK  \\l ID_gloss_45_pixmap}{\fldrslt \i pixmaps}}.\hyphpar0\par\pard\sb311\s1\sl539 {\*\bkmkstart ID_glossary_45_c}{\*\bkmkend ID_glossary_45_c}\b\fs41\lang1024\f1 C\keepn\hyphpar0\par\pard\sb207\s3\li960\sl260 {\*\bkmkstart ID_gloss_45_cfb_45_layer}{\*\bkmkend ID_gloss_45_cfb_45_layer}\fs20 Color Framebuffer Layer\keepn\hyphpar0\par\pard\sb100\li1360\sl260 \b0\lang1033\f0 Deprecated X Server layer providing implementations of the X graphics functions to draw on an antiquated framebuffer device. CFB is optimized to minimize CPU instructions at the expense of additional memory accesses; this does not work well on modern machines because memory access is the system performance bottle neck. CFB can only be initialized to draw on one depth of framebuffer per instantiation; this was done to eliminate CPU instructions that checked the current framebuffer depth, thus saving processing time on early machines.\hyphpar0\par\pard\sb150\s3\li960\sl260 {\*\bkmkstart ID_gloss_45_colormap}{\*\bkmkend ID_gloss_45_colormap}\b\lang1024\f1 Colormap\keepn\hyphpar0\par\pard\sb100\li1360\sl260 \b0\lang1033\f0 X Server colormap. Contains a table translating index values to red, green, blue 3-tuples that will be displayed on the screen when a given index value is contained in a bitmap.\hyphpar0\par\pard\sb311\s1\sl539 {\*\bkmkstart ID_glossary_45_d}{\*\bkmkend ID_glossary_45_d}\b\fs41\lang1024\f1 D\keepn\hyphpar0\par\pard\sb207\s3\li960\sl260 {\*\bkmkstart ID_gloss_45_ddx_45_layer}{\*\bkmkend ID_gloss_45_ddx_45_layer}\fs20 Device Dependent X Layer\keepn\hyphpar0\par\pard\sb100\li1360\sl260 \b0\lang1033\f0 X Server layer that depends on the hardware; but not the operating system.\hyphpar0\par\pard\sb150\s3\li960\sl260 {\*\bkmkstart ID_gloss_45_dix_45_layer}{\*\bkmkend ID_gloss_45_dix_45_layer}\b\lang1024\f1 Device Independent X Layer\keepn\hyphpar0\par\pard\sb100\li1360\sl260 \b0\lang1033\f0 X Server layer that does not depend on the hardware layer, nor the operating system.\hyphpar0\par\pard\sb311\s1\sl539 {\*\bkmkstart ID_glossary_45_f}{\*\bkmkend ID_glossary_45_f}\b\fs41\lang1024\f1 F\keepn\hyphpar0\par\pard\sb207\s3\li960\sl260 {\*\bkmkstart ID_gloss_45_fb_45_layer}{\*\bkmkend ID_gloss_45_fb_45_layer}\fs20 Framebuffer Layer\keepn\hyphpar0\par\pard\sb100\li1360\sl260 \b0\lang1033\f0 X Server layer providing implementations of the X graphics functions to draw on a modern framebuffer device. FB is optimized to minimize memory accesses at the expense of additional CPU instructions; this works well on modern machines because memory access is the system performance bottle neck.\hyphpar0\par\pard\sb311\s1\sl539 {\*\bkmkstart ID_glossary_45_g}{\*\bkmkend ID_glossary_45_g}\b\fs41\lang1024\f1 G\keepn\hyphpar0\par\pard\sb207\s3\li960\sl260 {\*\bkmkstart ID_gloss_45_gc}{\*\bkmkend ID_gloss_45_gc}\fs20 Graphics Context\keepn\hyphpar0\par\pard\sb100\li1360\sl260 \b0\lang1033\f0 X Server graphics context. Stores information describing a graphics operation to perform, such as the foreground and background colors, fill style, stipple, and tile.\hyphpar0\par\pard\sb150\s3\li960\sl260 {\*\bkmkstart ID_gloss_45_git}{\*\bkmkend ID_gloss_45_git}\b\lang1024\f1 git\keepn\hyphpar0\par\pard\sb100\li1360\sl260 \b0\lang1033\f0 git is an open source distributed version control system. More information can be found at the git project homepage (http://git-scm.com/).\hyphpar0\par\pard\sb311\s1\sl539 {\*\bkmkstart ID_glossary_45_m}{\*\bkmkend ID_glossary_45_m}\b\fs41\lang1024\f1 M\keepn\hyphpar0\par\pard\sb207\s3\li960\sl260 {\*\bkmkstart ID_gloss_45_mi_45_layer}{\*\bkmkend ID_gloss_45_mi_45_layer}\fs20 Machine Independent Layer\keepn\hyphpar0\par\pard\sb100\li1360\sl260 \b0\lang1033\f0 X Server layer providing user input and graphics display functions that are independent of the machine used by the DDX layer. The MI drawing functions depend on only three DDX functions: \fs18\f2 FillSpans\fs20\f0 , \fs18\f2 GetSpans\fs20\f0 , and \fs18\f2 SetSpans\fs20\f0 .\hyphpar0\par\pard\sb311\s1\sl539 {\*\bkmkstart ID_glossary_45_o}{\*\bkmkend ID_glossary_45_o}\b\fs41\lang1024\f1 O\keepn\hyphpar0\par\pard\sb207\s3\li960\sl260 {\*\bkmkstart ID_gloss_45_offscreen_45_framebuffer}{\*\bkmkend ID_gloss_45_offscreen_45_framebuffer}\fs20 Offscreen Framebuffer\keepn\hyphpar0\par\pard\sb100\li1360\sl260 \b0\lang1033\f0 Essentially a {\field{\*\fldinst   HYPERLINK  \\l ID_gloss_45_bitmap_45_win32}{\fldrslt \i bitmap}}, in the Windows sense, of size and color format that can be displayed on the screen. An offscreen framebuffer may be identical in size and color format to the {\field{\*\fldinst   HYPERLINK  \\l ID_gloss_45_primary_45_framebuffer}{\fldrslt \i primary framebuffer}}, but this is not always required.\hyphpar0\par\pard\sb150\s3\li960\sl260 {\*\bkmkstart ID_gloss_45_os_45_layer}{\*\bkmkend ID_gloss_45_os_45_layer}\b\lang1024\f1 OS Layer\keepn\hyphpar0\par\pard\sb100\li1360\sl260 \b0\lang1033\f0 X Server layer that depends on the operating system; but not the hardware.\hyphpar0\par\pard\sb311\s1\sl539 {\*\bkmkstart ID_glossary_45_p}{\*\bkmkend ID_glossary_45_p}\b\fs41\lang1024\f1 P\keepn\hyphpar0\par\pard\sb207\s3\li960\sl260 {\*\bkmkstart ID_gloss_45_pixmap}{\*\bkmkend ID_gloss_45_pixmap}\fs20 Pixmap\keepn\hyphpar0\par\pard\sb100\li1360\sl260 \b0\lang1033\f0 X pixel map with bit depth not equal to one. X pixel maps of bit depth one are called {\field{\*\fldinst   HYPERLINK  \\l ID_gloss_45_bitmap_45_x}{\fldrslt \i bitmaps}}.\hyphpar0\par\pard\sb150\s3\li960\sl260 {\*\bkmkstart ID_gloss_45_primary_45_framebuffer}{\*\bkmkend ID_gloss_45_primary_45_framebuffer}\b\lang1024\f1 Primary Framebuffer\keepn\hyphpar0\par\pard\sb100\li1360\sl260 \b0\lang1033\f0 The block of memory, essentially a {\field{\*\fldinst   HYPERLINK  \\l ID_gloss_45_bitmap_45_win32}{\fldrslt \i bitmap}}, that describes what is currently being displayed on the screen. Any updates to the primary framebuffer will be displayed on the screen after the next screen refresh.\hyphpar0\par\pard\sb150\s3\li960\sl260 {\*\bkmkstart ID_gloss_45_privates}{\*\bkmkend ID_gloss_45_privates}\b\lang1024\f1 Privates\keepn\hyphpar0\par\pard\sb100\li1360\sl260 \b0\lang1033\f0 Additional information associated with internal X Server structures, such as {\field{\*\fldinst   HYPERLINK  \\l ID_gloss_45_colormap}{\fldrslt \i colormaps}}, {\field{\*\fldinst   HYPERLINK  \\l ID_gloss_45_gc}{\fldrslt \i GCs}}, {\field{\*\fldinst   HYPERLINK  \\l ID_gloss_45_pixmap}{\fldrslt \i pixmaps}}, or {\field{\*\fldinst   HYPERLINK  \\l ID_gloss_45_screen}{\fldrslt \i screens}}.\hyphpar0\par\pard\sb311\s1\sl539 {\*\bkmkstart ID_glossary_45_s}{\*\bkmkend ID_glossary_45_s}\b\fs41\lang1024\f1 S\keepn\hyphpar0\par\pard\sb207\s3\li960\sl260 {\*\bkmkstart ID_gloss_45_screen}{\*\bkmkend ID_gloss_45_screen}\fs20 Screen\keepn\hyphpar0\par\pard\sb100\li1360\sl260 \b0\lang1033\f0 X Server screen. A screen usually corresponds to a display device; however, Cygwin/X's X Server corresponds each screen to one Windows window. A single instance of the Cygwin/X X Server may have several screens.\hyphpar0\par\pard\sb150\s3\li960\sl260 {\*\bkmkstart ID_gloss_45_shadow_45_layer}{\*\bkmkend ID_gloss_45_shadow_45_layer}\b\lang1024\f1 Shadow\keepn\hyphpar0\par\pard\sb100\li1360\sl260 \b0\lang1033\f0 X Server shadow layer that allows {\field{\*\fldinst   HYPERLINK  \\l ID_gloss_45_fb_45_layer}{\fldrslt \i FB}} to draw to an offscreen framebuffer and occasionally call a {\field{\*\fldinst   HYPERLINK  \\l ID_gloss_45_ddx_45_layer}{\fldrslt \i DDX}} function that transfers the updated regions to the screen.\hyphpar0\par\pard\sb311\s1\sl539 {\*\bkmkstart ID_glossary_45_x}{\*\bkmkend ID_glossary_45_x}\b\fs41\lang1024\f1 X\keepn\hyphpar0\par\pard\sb207\s3\li960\sl260 {\*\bkmkstart ID_gloss_45_xdm}{\*\bkmkend ID_gloss_45_xdm}\fs20 X Display Manager\keepn\hyphpar0\par\pard\sb100\li1360\sl260 \b0\lang1033\f0 An X Display Manager presents a graphical login screen to X users. Often an XDM will allow the user to select a desktop environment or window manager to be for their login session. Some X Display Managers are xdm, gdm (Gnome Display Manager), and kdm (KDE Display Manager).\hyphpar0\par\pard\sb150\s3\li960\sl260 {\*\bkmkstart ID_gloss_45_xdmcp}{\*\bkmkend ID_gloss_45_xdmcp}\b\lang1024\f1 X Display Manager Control Protocol\keepn\hyphpar0\par\pard\sb100\li1360\sl260 \b0\lang1033\f0 XDMCP allows XDM to process logins for users remote to the machine that XDM is running on; login sessions will be run on the machine running XDM. For example, at a university you may use XDMCP to login to an X session running on an engineering department computer from your dorm room.\hyphpar0\par\pard\sb100\li1360\sl260 \i\lang1024 See Also: {\field{\*\fldinst   HYPERLINK  \\l ID_gloss_45_xdm}{\fldrslt \i0 X Display Manager}}\i0 .\hyphpar0\par\sect\sectd\plain\pgwsxn12240\pghsxn15840\marglsxn1440\margrsxn1440\margtsxn1440\margbsxn1920\headery0\footery0\pgndec\titlepg{\headerf\pard\sl-240\sb770\sa430\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {}\par}{\footerf\pard\sl-240\sb770\sa910\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {\i\fs20 \chpgn }\par}{\headerl\pard\sl-240\sb770\sa430\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {\i\fs20 Appendix A. Building a cross-compiler}\par}{\footerl\pard\sl-240\sb770\sa910\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {\i\fs20 \chpgn }\par}{\headerr\pard\sl-240\sb770\sa430\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {\i\fs20 Appendix A. Building a cross-compiler}\par}{\footerr\pard\sl-240\sb770\sa910\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {\i\fs20 \chpgn }\par}\pard\sb311\s1\sl539 {\*\bkmkstart ID_cross}{\*\bkmkend ID_cross}\b\fs41\f1 Appendix A. Building a cross-compiler\keepn\hyphpar0\par\pard\sb207\li1360\sl234 \fs18 Here be dragons: \b0 Building a cross-compiler is not often tested. You will likely encounter problems following these instructions, and require an in-depth understanding of what you are doing in order to fix those problems. These instructions are meant to be a template to be completed with your own understanding, rather than a recipe to be followed blindly. Reports to the mailing list that you followed these instructions, got an error message and are now stuck, will be ignored with harsh, uncaring indifference.\hyphpar0\par\pard\sb200\li1360\sl234 \b Note: \b0 Even once you have built your cross-compiler, there are a whole new class of problems that can happen when cross-compiling that are simply not an issue when building on the target. For example: you will need to somehow make the dependencies of your program available to the cross-compiler, hardly anything uses HOST_EXEEXT correctly, etc.\hyphpar0\par\pard\sb200\li960\sl260 \fs20\lang1033\f0 This mailing list thread (http://cygwin.com/ml/cygwin/2010-09/msg00194.html) discusses some of the issues with building a cross-compiler, and provides an example script. It also discusses cross-compiling the Cygwin DLL itself.\hyphpar0\par\pard\sb100\li960\sl260 You will want to read carefully the GCC installation guide (http://gcc.gnu.org/install/).\hyphpar0\par\pard\sb100\li960\sl260 These instructions will assume you have chosen a suitable working directory, e.g. \fs18\f2 ~/cygwin/\hyphpar0\par\pard\sb100\li960\sl260 \fs20\f0 To build a minimal cross-toolchain, we need to build binutils (for the cross-assembler and cross-linker) and GCC (for the cross-compiler).\hyphpar0\par\pard\sb259\s2\sl449 {\*\bkmkstart ID_cross_45_obtaining_45_compiler_45_source}{\*\bkmkend ID_cross_45_obtaining_45_compiler_45_source}\b\fs34\lang1024\f1 Obtaining binutils and GCC source\keepn\hyphpar0\par\pard\sb173\li960\sl260 \b0\fs20\lang1033\f0 binutils and GCC releases that are known to work for Cygwin are distributed with source code by the Cygwin project. These may contain patches against the stock upstream release required to build or function correctly on Cygwin, therefore, it is highly recommended that you obtain the binutils and GCC sources from the Cygwin mirror network (http://cygwin.com/mirrors.html).\hyphpar0\par\pard\sb100\li960\sl260 Follow these steps to download Cygwin sources:\hyphpar0\par\pard\sb100\li1320\sl260\fi-360 \tqr\tx1270\tx1320\tab \lang1024 1.\tab Create a directory to store the binutils and GCC sources in, such as \fs18\f2 ~/cygwin/src/\hyphpar0\par\pard\sb100\li1320\sl260\fi-360 \tqr\tx1270\tx1320\tab \fs20\f0 2.\tab The URL listed for your nearest mirror site should take you to the \fs18\f2 cygwin/\fs20\f0  directory on the mirror\hyphpar0\par\pard\sb100\li1320\sl260\fi-360 \tqr\tx1270\tx1320\tab 3.\tab Download the following files from \fs18\f2 cygwin/release/\fs20\f0 , saving them to \fs18\f2 ~/cygwin/src/\fs20\f0 .\hyphpar0\par\pard\sb100\li1520\sl260\fi-200 \tx1520 \fs16 \'95\tab \fs18\f2 binutils/binutils-2.20.51-2-src.tar.bz2\hyphpar0\par\pard\sb100\li1520\sl260\fi-200 \tx1520 \fs16\f0 \'95\tab \fs18\f2 gcc4/gcc4-4.5.0-1-src.tar.bz2\hyphpar0\par\pard\sb200\li960\sl234 \sa0\par\fi0\sb0
user@crosshost ~ $ mkdir -p ~/cygwin/src\sa0\par\fi0\sb0
user@crosshost ~ $ cd ~/cygwin/src\sa0\par\fi0\sb0
user@crosshost ~/cygwin/src $ wget $YOUR_MIRROR/release/binutils/binutils-2.20.51-2-src.tar.bz2\sa0\par\fi0\sb0
user@crosshost ~/cygwin/src $ wget $YOUR_MIRROR/release/gcc4/gcc4-4.5.0-1-src.tar.bz2\sa0\par\fi0\sb0
\hyphpar0\par\pard\sb200\li960\sl260 \fs20\lang1033\f0 Currently GCC is provided as cygport package. You will want to examine closely the .cygport file contained in the source package which shows how GCC is configured and built natively.\hyphpar0\par\pard\sb100\li960\sl260 You will want to read carefully the cygwin-specific READMEs installed by the corresponding binary packages into \fs18\f2 /usr/share/doc/Cygwin/\fs20\f0 , which contain important information and build instructions\hyphpar0\par\pard\sb259\s2\sl449 {\*\bkmkstart ID_cross_45_obtaining_45_cygwin_45_headers_45_and_45_libs}{\*\bkmkend ID_cross_45_obtaining_45_cygwin_45_headers_45_and_45_libs}\b\fs34\lang1024\f1 Obtaining Cygwin headers and libraries\keepn\hyphpar0\par\pard\sb173\li960\sl260 \b0\fs20\lang1033\f0 The usual technique for building GCC cross-compilers is to:\hyphpar0\par\pard\sb100\li1320\sl260\fi-360 \tqr\tx1270\tx1320\tab \lang1024 1.\tab build binutils\hyphpar0\par\pard\sb100\li1320\sl260\fi-360 \tqr\tx1270\tx1320\tab 2.\tab build a bootstrap compiler (--without-headers --enable-languages=c) that will only be used to build the C runtime library.\hyphpar0\par\pard\sb100\li1320\sl260\fi-360 \tqr\tx1270\tx1320\tab 3.\tab use the bootstrap compiler to build the C runtime library.\hyphpar0\par\pard\sb100\li1320\sl260\fi-360 \tqr\tx1270\tx1320\tab 4.\tab rebuild the final compiler, including internal libraries that need the target-specific C runtime library in order to be compiled properly.\hyphpar0\par\pard\sb100\li960\sl260 \lang1033 Unfortunately, this technique cannot be applied building a cross-compiler for Cygwin, not least due to the use of C++ code in \fs18\f2 winsup/\fs20\f0 .\hyphpar0\par\pard\sb100\li960\sl260 The simplest method of escaping from this chicken-and-egg situation is to make the Cygwin headers and libraries available at the time of building the cross-compiler, by installing them from the Cygwin binary packages containing those headers and libraries.\hyphpar0\par\pard\sb100\li960\sl260 Headers and libraries from the following packages are required:\hyphpar0\par\pard\sb100\li1160\sl260\fi-200 \tx1160 \fs16\lang1024 \'95\tab \fs20 cygwin (needed for building libgcc)\hyphpar0\par\pard\sb100\li1160\sl260\fi-200 \tx1160 \fs16 \'95\tab \fs20 win32api (needed for building libgcc)\hyphpar0\par\pard\sb100\li1160\sl260\fi-200 \tx1160 \fs16 \'95\tab \fs20 iconv (needed for building libstdc++)\hyphpar0\par\pard\sb200\li960\sl234 \fs18\f2 \sa0\par\fi0\sb0
user@crosshost ~/cygwin/src $ wget $YOUR_MIRROR/release/cygwin/cygwin-1.7.7-1.tar.bz2\sa0\par\fi0\sb0
user@crosshost ~/cygwin/src $ wget $YOUR_MIRROR/release/w32api/w32api-3.15-1.tar.bz2\sa0\par\fi0\sb0
user@crosshost ~/cygwin/src $ wget $YOUR_MIRROR/release/libiconv/libiconv-1.13-10.tar.bz2\sa0\par\fi0\sb0
user@crosshost ~/cygwin/src $ cd ~/cygwin\sa0\par\fi0\sb0
user@crosshost ~/cygwin $ tar xjf src/cygwin-1.7.7-1.tar.bz2 usr/include usr/lib\sa0\par\fi0\sb0
user@crosshost ~/cygwin $ tar xjf src/w32api-3.15-1.tar.bz2 usr/include usr/lib\sa0\par\fi0\sb0
user@crosshost ~/cygwin $ tar xjf src/libiconv-1.13-10.tar.bz2 usr/include usr/lib\sa0\par\fi0\sb0
user@crosshost ~/cygwin $ ln -s ../usr/include/ i686-pc-cygwin/include\sa0\par\fi0\sb0
user@crosshost ~/cygwin $ ln -s ../usr/lib/ i686-pc-cygwin/lib\sa0\par\fi0\sb0
\hyphpar0\par\pard\sb200\li960\sl260 \fs20\lang1033\f0 Alternatively, these headers and libraries can be obtained by copying the contents of the \fs18\f2 /usr/lib\fs20\f0  directory and \fs18\f2 /usr/include\fs20\f0  directory of a Cygwin host, to the \fs18\f2 ~/cygwin/i686-pc-cygwin\fs20\f0  directory on your build host. \i Ensure the method you use to copy these files preserves symlinks. \hyphpar0\par\pard\sb259\s2\sl449 {\*\bkmkstart ID_cross_45_building_45_binutils}{\*\bkmkend ID_cross_45_building_45_binutils}\b\i0\fs34\lang1024\f1 Building binutils\keepn\hyphpar0\par\pard\sb173\li1320\sl260\fi-360 \tqr\tx1270\tx1320\tab \b0\fs20\f0 1.\tab Change the current directory to the \fs18\f2 ~/cygwin/src\fs20\f0  directory:\hyphpar0\par\pard\sb100\li1320\sl234 \fs18\f2 \sa0\par\fi0\sb0
user@crosshost ~/cygwin $ cd ~/cygwin/src/\sa0\par\fi0\sb0
\hyphpar0\par\pard\sb100\li1320\sl260\fi-360 \tqr\tx1270\tx1320\tab \fs20\f0 2.\tab Extract the binutils archive:\hyphpar0\par\pard\sb100\li1320\sl234 \fs18\f2 \sa0\par\fi0\sb0
user@crosshost ~/cygwin/src $ tar jxf binutils-2.20.51-2-src.tar.bz2\sa0\par\fi0\sb0
\hyphpar0\par\pard\sb100\li1320\sl260\fi-360 \tqr\tx1270\tx1320\tab \fs20\f0 3.\tab Create a \fs18\f2 ~/cygwin/build/binutils-2.20.51-2/\fs20\f0  directory and change the current directory to that directory:\hyphpar0\par\pard\sb100\li1320\sl234 \fs18\f2 \sa0\par\fi0\sb0
user@crosshost ~/cygwin/src $ mkdir -p ~/cygwin/build/binutils-2.20.51-2\sa0\par\fi0\sb0
user@crosshost ~/cygwin/src $ cd -p ~/cygwin/build/binutils-2.20.51-2\sa0\par\fi0\sb0
\hyphpar0\par\pard\sb100\li1320\sl260\fi-360 \tqr\tx1270\tx1320\tab \fs20\f0 4.\tab Configure binutils:\hyphpar0\par\pard\sb100\li1320\sl234 \fs18\f2 \sa0\par\fi0\sb0
user@crosshost ~/cygwin/build/binutils-2.20.51-2/build $ ../../src/binutils-2.20.51-2/configure --prefix=/home/user/cygwin --target=i686-pc-cygwin 2>&1 | tee configure.log\sa0\par\fi0\sb0
\hyphpar0\par\pard\sb100\li1520\sl260\fi-200 \tx1520 \fs16\f0 \'95\tab \fs20 The Cygwin binutils source tarball doesn't seem to record the configuration used to build the Cygwin binary package.\hyphpar0\par\pard\sb100\li1320\sl260\fi-360 \tqr\tx1270\tx1320\tab 5.\tab Build binutils:\hyphpar0\par\pard\sb100\li1320\sl234 \fs18\f2 \sa0\par\fi0\sb0
user@crosshost ~/cygwin/build/binutils-2.20.51-2/build $ make all 2>&1 | tee all.log\sa0\par\fi0\sb0
\hyphpar0\par\pard\sb100\li1320\sl260\fi-360 \tqr\tx1270\tx1320\tab \fs20\f0 6.\tab Install binutils:\hyphpar0\par\pard\sb100\li1320\sl234 \fs18\f2 \sa0\par\fi0\sb0
user@crosshost ~/cygwin/build/binutils-2.20.51-2/build $ make install 2>&1 | tee install.log\sa0\par\fi0\sb0
\hyphpar0\par\pard\sb100\li1320\sl260\fi-360 \tqr\tx1270\tx1320\tab \fs20\f0 7.\tab Modify the PATH environment variable to include the directories that the binutils executables were installed in, so they are available when we build GCC:\hyphpar0\par\pard\sb100\li1320\sl234 \fs18\f2 \sa0\par\fi0\sb0
user@crosshost ~/cygwin/build/binutils-2.20.51-2/build $ export PATH=~/cygwin/bin:$PATH\sa0\par\fi0\sb0
\hyphpar0\par\pard\sb259\s2\sl449 {\*\bkmkstart ID_cross_45_building_45_gcc}{\*\bkmkend ID_cross_45_building_45_gcc}\b\fs34\f1 Building GCC\keepn\hyphpar0\par\pard\sb173\li1320\sl260\fi-360 \tqr\tx1270\tx1320\tab \b0\fs20\f0 1.\tab Change the current directory to the \fs18\f2 ~/cygwin/src/\fs20\f0  directory:\hyphpar0\par\pard\sb100\li1320\sl234 \fs18\f2 \sa0\par\fi0\sb0
user@crosshost ~ $ cd ~/cygwin/src\sa0\par\fi0\sb0
\hyphpar0\par\pard\sb100\li1320\sl260\fi-360 \tqr\tx1270\tx1320\tab \fs20\f0 2.\tab Extract the GCC archive, then extract the upstream GCC source archive and apply the patches it contains :\hyphpar0\par\pard\sb100\li1320\sl234 \fs18\f2 \sa0\par\fi0\sb0
user@crosshost ~/cygwin/src $ tar jxf gcc4-4.5.0-1-src.tar.bz2\sa0\par\fi0\sb0
user@crosshost ~/cygwin/src $ tar jxf gcc-4.5.0.tar.bz2\sa0\par\fi0\sb0
user@crosshost ~/cygwin/src $ \i (patching and autoreconf commands omitted)\i0 \sa0\par\fi0\sb0
\hyphpar0\par\pard\sb100\li1520\sl260\fi-200 \tx1520 \fs16\f0 \'95\tab \fs20 Where the patches touch the configuration mechanism, you need to regenerate the files generated by autotools. autoreconf doesn't work, I don't know why, so you need to invoke the correct autotools in the correct directories. The cygport file provides an example of how to do this.\hyphpar0\par\pard\sb100\li1520\sl260\fi-200 \tx1520 \fs16 \'95\tab \fs20 GCC is picky about the exact versions of the autotools in use, so you need to make the versions it requires available.\hyphpar0\par\pard\sb100\li1520\sl260\fi-200 \tx1520 \fs16 \'95\tab \fs20 For bonus points, use \b cygport prep\b0  to extract the source and apply the patches.\hyphpar0\par\pard\sb100\li1320\sl260\fi-360 \tqr\tx1270\tx1320\tab 3.\tab Create a \fs18\f2 ~/cygwin/build/gcc-4.5.0-1/\fs20\f0  directory and change the current directory to that directory:\hyphpar0\par\pard\sb100\li1320\sl234 \fs18\f2 \sa0\par\fi0\sb0
user@crosshost ~/cygwin/src $ mkdir ~/cygwin/build/gcc-4.5.0\sa0\par\fi0\sb0
user@crosshost ~/cygwin/src $ cd ~/cygwin/build/gcc-4.5.0\sa0\par\fi0\sb0
\hyphpar0\par\pard\sb100\li1520\sl260\fi-200 \tx1520 \fs16\f0 \'95\tab \fs20 It's highly recommended that GCC be built into a separate directory from the sources which does not reside within the source tree. Building GCC in the source directory is generally untested, and building into a subdirectory of the source directory is unsupported.\hyphpar0\par\pard\sb100\li1320\sl260\fi-360 \tqr\tx1270\tx1320\tab 4.\tab Configure GCC:\hyphpar0\par\pard\sb100\li1320\sl234 \fs18\f2 \sa0\par\fi0\sb0
user@crosshost ~/cygwin/build/gcc-4.5.0 $ ../../src/gcc-4.5.0/configure --prefix=/home/user/cygwin --target=i686-pc-cygwin \\\sa0\par\fi0\sb0
--disable-bootstrap --enable-version-specific-runtime-libs --enable-static --enable-shared --enable-shared-libgcc \\\sa0\par\fi0\sb0
--disable-__cxa_atexit --disable-sjlj-exceptions --enable-languages=c,c++ --disable-symvers --enable-threads=posix \\\sa0\par\fi0\sb0
2>&1 | tee configure.log\sa0\par\fi0\sb0
\hyphpar0\par\pard\sb100\li1520\sl260\fi-200 \tx1520 \fs16\f0 \'95\tab \fs20 Use the same configure options as used in the cygport file or reported by gcc -v\hyphpar0\par\pard\sb100\li1320\sl260\fi-360 \tqr\tx1270\tx1320\tab 5.\tab Build GCC:\hyphpar0\par\pard\sb100\li1320\sl234 \fs18\f2 \sa0\par\fi0\sb0
user@crosshost ~/cygwin/build/gcc-4.5.0-1 $ make all 2>&1 | tee all.log\sa0\par\fi0\sb0
\hyphpar0\par\pard\sb100\li1320\sl260\fi-360 \tqr\tx1270\tx1320\tab \fs20\f0 6.\tab Install GCC:\hyphpar0\par\pard\sb100\li1320\sl234 \fs18\f2 \sa0\par\fi0\sb0
user@crosshost ~/cygwin/build/gcc-4.5.0-1 $ make install 2>&1 | install.log\sa0\par\fi0\sb0
\hyphpar0\par\pard\sb100\li960\sl260 \fs20\lang1033\f0 Building binutils and GCC is now complete. Test your cross-compiler by checking that a 'hello world' program can be successfully compiled on your build host and run on your Cygwin target host.\hyphpar0\par\sect\sectd\plain\pgwsxn12240\pghsxn15840\marglsxn1440\margrsxn1440\margtsxn1440\margbsxn1920\headery0\footery0\pgndec\titlepg{\headerf\pard\sl-240\sb770\sa430\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {}\par}{\footerf\pard\sl-240\sb770\sa910\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {\i\fs20 \chpgn }\par}{\headerl\pard\sl-240\sb770\sa430\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {\i\fs20 Appendix B. GNU Free Documentation License}\par}{\footerl\pard\sl-240\sb770\sa910\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {\i\fs20 \chpgn }\par}{\headerr\pard\sl-240\sb770\sa430\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {\i\fs20 Appendix B. GNU Free Documentation License}\par}{\footerr\pard\sl-240\sb770\sa910\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {\i\fs20 \chpgn }\par}\pard\sb311\s1\sl539 {\*\bkmkstart ID_gfdl}{\*\bkmkend ID_gfdl}\b\fs41\f1 Appendix B. GNU Free Documentation License\keepn\hyphpar0\par\pard\sb207\li960\sl260 \b0\fs20\lang1033\f0 Version 1.3, 3 November 2008\hyphpar0\par\pard\sb100\li960\sl260 Copyright \'a9 2000, 2001, 2002, 2007, 2008 Free Software Foundation, Inc. (http://www.fsf.org/)\hyphpar0\par\pard\sb100\li960\sl260 Everyone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed.\hyphpar0\par\pard\sb216\li960\sl374 {\*\bkmkstart ID_section0}{\*\bkmkend ID_section0}\b\fs28\lang1024\f1  0. PREAMBLE \keepn\hyphpar0\par\pard\sb144\li960\sl260 \b0\fs20\lang1033\f0 The purpose of this License is to make a manual, textbook, or other functional and useful document \'93free\'94 in the sense of freedom: to assure everyone the effective freedom to copy and redistribute it, with or without modifying it, either commercially or noncommercially. Secondarily, this License preserves for the author and publisher a way to get credit for their work, while not being considered responsible for modifications made by others.\hyphpar0\par\pard\sb100\li960\sl260 This License is a kind of \'93copyleft\'94, which means that derivative works of the document must themselves be free in the same sense. It complements the GNU General Public License, which is a copyleft license designed for free software.\hyphpar0\par\pard\sb100\li960\sl260 We have designed this License in order to use it for manuals for free software, because free software needs free documentation: a free program should come with manuals providing the same freedoms that the software does. But this License is not limited to software manuals; it can be used for any textual work, regardless of subject matter or whether it is published as a printed book. We recommend this License principally for works whose purpose is instruction or reference.\hyphpar0\par\pard\sb216\li960\sl374 {\*\bkmkstart ID_section1}{\*\bkmkend ID_section1}\b\fs28\lang1024\f1  1. APPLICABILITY AND DEFINITIONS \keepn\hyphpar0\par\pard\sb144\li960\sl260 \b0\fs20\lang1033\f0 This License applies to any manual or other work, in any medium, that contains a notice placed by the copyright holder saying it can be distributed under the terms of this License. Such a notice grants a world-wide, royalty-free license, unlimited in duration, to use that work under the conditions stated herein. The \'93Document\'94, below, refers to any such manual or work. Any member of the public is a licensee, and is addressed as \'93you\'94. You accept the license if you copy, modify or distribute the work in a way requiring permission under copyright law.\hyphpar0\par\pard\sb100\li960\sl260 A \'93Modified Version\'94 of the Document means any work containing the Document or a portion of it, either copied verbatim, or with modifications and/or translated into another language.\hyphpar0\par\pard\sb100\li960\sl260 A \'93Secondary Section\'94 is a named appendix or a front-matter section of the Document that deals exclusively with the relationship of the publishers or authors of the Document to the Document\'92s overall subject (or to related matters) and contains nothing that could fall directly within that overall subject. (Thus, if the Document is in part a textbook of mathematics, a Secondary Section may not explain any mathematics.) The relationship could be a matter of historical connection with the subject or with related matters, or of legal, commercial, philosophical, ethical or political position regarding them.\hyphpar0\par\pard\sb100\li960\sl260 The \'93Invariant Sections\'94 are certain Secondary Sections whose titles are designated, as being those of Invariant Sections, in the notice that says that the Document is released under this License. If a section does not fit the above definition of Secondary then it is not allowed to be designated as Invariant. The Document may contain zero Invariant Sections. If the Document does not identify any Invariant Sections then there are none.\hyphpar0\par\pard\sb100\li960\sl260 The \'93Cover Texts\'94 are certain short passages of text that are listed, as Front-Cover Texts or Back-Cover Texts, in the notice that says that the Document is released under this License. A Front-Cover Text may be at most 5 words, and a Back-Cover Text may be at most 25 words.\hyphpar0\par\pard\sb100\li960\sl260 A \'93Transparent\'94 copy of the Document means a machine-readable copy, represented in a format whose specification is available to the general public, that is suitable for revising the document straightforwardly with generic text editors or (for images composed of pixels) generic paint programs or (for drawings) some widely available drawing editor, and that is suitable for input to text formatters or for automatic translation to a variety of formats suitable for input to text formatters. A copy made in an otherwise Transparent file format whose markup, or absence of markup, has been arranged to thwart or discourage subsequent modification by readers is not Transparent. An image format is not Transparent if used for any substantial amount of text. A copy that is not \'93Transparent\'94 is called \'93Opaque\'94.\hyphpar0\par\pard\sb100\li960\sl260 Examples of suitable formats for Transparent copies include plain ASCII without markup, Texinfo input format, LaTeX input format, SGML or XML using a publicly available DTD, and standard-conforming simple HTML, PostScript or PDF designed for human modification. Examples of transparent image formats include PNG, XCF and JPG. Opaque formats include proprietary formats that can be read and edited only by proprietary word processors, SGML or XML for which the DTD and/or processing tools are not generally available, and the machine-generated HTML, PostScript or PDF produced by some word processors for output purposes only.\hyphpar0\par\pard\sb100\li960\sl260 The \'93Title Page\'94 means, for a printed book, the title page itself, plus such following pages as are needed to hold, legibly, the material this License requires to appear in the title page. For works in formats which do not have any title page as such, \'93Title Page\'94 means the text near the most prominent appearance of the work\'92s title, preceding the beginning of the body of the text.\hyphpar0\par\pard\sb100\li960\sl260 The \'93publisher\'94 means any person or entity that distributes copies of the Document to the public.\hyphpar0\par\pard\sb100\li960\sl260 A section \'93Entitled XYZ\'94 means a named subunit of the Document whose title either is precisely XYZ or contains XYZ in parentheses following text that translates XYZ in another language. (Here XYZ stands for a specific section name mentioned below, such as \'93Acknowledgements\'94, \'93Dedications\'94, \'93Endorsements\'94, or \'93History\'94.) To \'93Preserve the Title\'94 of such a section when you modify the Document means that it remains a section \'93Entitled XYZ\'94 according to this definition.\hyphpar0\par\pard\sb100\li960\sl260 The Document may include Warranty Disclaimers next to the notice which states that this License applies to the Document. These Warranty Disclaimers are considered to be included by reference in this License, but only as regards disclaiming warranties: any other implication that these Warranty Disclaimers may have is void and has no effect on the meaning of this License.\hyphpar0\par\pard\sb216\li960\sl374 {\*\bkmkstart ID_section2}{\*\bkmkend ID_section2}\b\fs28\lang1024\f1  2. VERBATIM COPYING \keepn\hyphpar0\par\pard\sb144\li960\sl260 \b0\fs20\lang1033\f0 You may copy and distribute the Document in any medium, either commercially or noncommercially, provided that this License, the copyright notices, and the license notice saying this License applies to the Document are reproduced in all copies, and that you add no other conditions whatsoever to those of this License. You may not use technical measures to obstruct or control the reading or further copying of the copies you make or distribute. However, you may accept compensation in exchange for copies. If you distribute a large enough number of copies you must also follow the conditions in section 3.\hyphpar0\par\pard\sb100\li960\sl260 You may also lend copies, under the same conditions stated above, and you may publicly display copies.\hyphpar0\par\pard\sb216\li960\sl374 {\*\bkmkstart ID_section3}{\*\bkmkend ID_section3}\b\fs28\lang1024\f1  3. COPYING IN QUANTITY \keepn\hyphpar0\par\pard\sb144\li960\sl260 \b0\fs20\lang1033\f0 If you publish printed copies (or copies in media that commonly have printed covers) of the Document, numbering more than 100, and the Document\'92s license notice requires Cover Texts, you must enclose the copies in covers that carry, clearly and legibly, all these Cover Texts: Front-Cover Texts on the front cover, and Back-Cover Texts on the back cover. Both covers must also clearly and legibly identify you as the publisher of these copies. The front cover must present the full title with all words of the title equally prominent and visible. You may add other material on the covers in addition. Copying with changes limited to the covers, as long as they preserve the title of the Document and satisfy these conditions, can be treated as verbatim copying in other respects.\hyphpar0\par\pard\sb100\li960\sl260 If the required texts for either cover are too voluminous to fit legibly, you should put the first ones listed (as many as fit reasonably) on the actual cover, and continue the rest onto adjacent pages.\hyphpar0\par\pard\sb100\li960\sl260 If you publish or distribute Opaque copies of the Document numbering more than 100, you must either include a machine-readable Transparent copy along with each Opaque copy, or state in or with each Opaque copy a computer-network location from which the general network-using public has access to download using public-standard network protocols a complete Transparent copy of the Document, free of added material. If you use the latter option, you must take reasonably prudent steps, when you begin distribution of Opaque copies in quantity, to ensure that this Transparent copy will remain thus accessible at the stated location until at least one year after the last time you distribute an Opaque copy (directly or through your agents or retailers) of that edition to the public.\hyphpar0\par\pard\sb100\li960\sl260 It is requested, but not required, that you contact the authors of the Document well before redistributing any large number of copies, to give them a chance to provide you with an updated version of the Document.\hyphpar0\par\pard\sb216\li960\sl374 {\*\bkmkstart ID_section4}{\*\bkmkend ID_section4}\b\fs28\lang1024\f1  4. MODIFICATIONS \keepn\hyphpar0\par\pard\sb144\li960\sl260 \b0\fs20\lang1033\f0 You may copy and distribute a Modified Version of the Document under the conditions of sections 2 and 3 above, provided that you release the Modified Version under precisely this License, with the Modified Version filling the role of the Document, thus licensing distribution and modification of the Modified Version to whoever possesses a copy of it. In addition, you must do these things in the Modified Version:\hyphpar0\par\pard\sb100\li1320\sl260\fi-360 \tqr\tx1270\tx1320\tab \lang1024 A.\tab Use in the Title Page (and on the covers, if any) a title distinct from that of the Document, and from those of previous versions (which should, if there were any, be listed in the History section of the Document). You may use the same title as a previous version if the original publisher of that version gives permission.\hyphpar0\par\pard\sb100\li1320\sl260\fi-360 \tqr\tx1270\tx1320\tab B.\tab List on the Title Page, as authors, one or more persons or entities responsible for authorship of the modifications in the Modified Version, together with at least five of the principal authors of the Document (all of its principal authors, if it has fewer than five), unless they release you from this requirement.\hyphpar0\par\pard\sb100\li1320\sl260\fi-360 \tqr\tx1270\tx1320\tab C.\tab State on the Title page the name of the publisher of the Modified Version, as the publisher.\hyphpar0\par\pard\sb100\li1320\sl260\fi-360 \tqr\tx1270\tx1320\tab D.\tab Preserve all the copyright notices of the Document.\hyphpar0\par\pard\sb100\li1320\sl260\fi-360 \tqr\tx1270\tx1320\tab E.\tab Add an appropriate copyright notice for your modifications adjacent to the other copyright notices.\hyphpar0\par\pard\sb100\li1320\sl260\fi-360 \tqr\tx1270\tx1320\tab F.\tab Include, immediately after the copyright notices, a license notice giving the public permission to use the Modified Version under the terms of this License, in the form shown in the Addendum below.\hyphpar0\par\pard\sb100\li1320\sl260\fi-360 \tqr\tx1270\tx1320\tab G.\tab Preserve in that license notice the full lists of Invariant Sections and required Cover Texts given in the Document\'92s license notice.\hyphpar0\par\pard\sb100\li1320\sl260\fi-360 \tqr\tx1270\tx1320\tab H.\tab Include an unaltered copy of this License.\hyphpar0\par\pard\sb100\li1320\sl260\fi-360 \tqr\tx1270\tx1320\tab I.\tab Preserve the section Entitled \'93History\'94, Preserve its Title, and add to it an item stating at least the title, year, new authors, and publisher of the Modified Version as given on the Title Page. If there is no section Entitled \'93History\'94 in the Document, create one stating the title, year, authors, and publisher of the Document as given on its Title Page, then add an item describing the Modified Version as stated in the previous sentence.\hyphpar0\par\pard\sb100\li1320\sl260\fi-360 \tqr\tx1270\tx1320\tab J.\tab Preserve the network location, if any, given in the Document for public access to a Transparent copy of the Document, and likewise the network locations given in the Document for previous versions it was based on. These may be placed in the \'93History\'94 section. You may omit a network location for a work that was published at least four years before the Document itself, or if the original publisher of the version it refers to gives permission.\hyphpar0\par\pard\sb100\li1320\sl260\fi-360 \tqr\tx1270\tx1320\tab K.\tab For any section Entitled \'93Acknowledgements\'94 or \'93Dedications\'94, Preserve the Title of the section, and preserve in the section all the substance and tone of each of the contributor acknowledgements and/or dedications given therein.\hyphpar0\par\pard\sb100\li1320\sl260\fi-360 \tqr\tx1270\tx1320\tab L.\tab Preserve all the Invariant Sections of the Document, unaltered in their text and in their titles. Section numbers or the equivalent are not considered part of the section titles.\hyphpar0\par\pard\sb100\li1320\sl260\fi-360 \tqr\tx1270\tx1320\tab M.\tab Delete any section Entitled \'93Endorsements\'94. Such a section may not be included in the Modified Version.\hyphpar0\par\pard\sb100\li1320\sl260\fi-360 \tqr\tx1270\tx1320\tab N.\tab Do not retitle any existing section to be Entitled \'93Endorsements\'94 or to conflict in title with any Invariant Section.\hyphpar0\par\pard\sb100\li1320\sl260\fi-360 \tqr\tx1270\tx1320\tab O.\tab Preserve any Warranty Disclaimers.\hyphpar0\par\pard\sb100\li960\sl260 \lang1033 If the Modified Version includes new front-matter sections or appendices that qualify as Secondary Sections and contain no material copied from the Document, you may at your option designate some or all of these sections as invariant. To do this, add their titles to the list of Invariant Sections in the Modified Version\'92s license notice. These titles must be distinct from any other section titles.\hyphpar0\par\pard\sb100\li960\sl260 You may add a section Entitled \'93Endorsements\'94, provided it contains nothing but endorsements of your Modified Version by various parties \'97 for example, statements of peer review or that the text has been approved by an organization as the authoritative definition of a standard.\hyphpar0\par\pard\sb100\li960\sl260 You may add a passage of up to five words as a Front-Cover Text, and a passage of up to 25 words as a Back-Cover Text, to the end of the list of Cover Texts in the Modified Version. Only one passage of Front-Cover Text and one of Back-Cover Text may be added by (or through arrangements made by) any one entity. If the Document already includes a cover text for the same cover, previously added by you or by arrangement made by the same entity you are acting on behalf of, you may not add another; but you may replace the old one, on explicit permission from the previous publisher that added the old one.\hyphpar0\par\pard\sb100\li960\sl260 The author(s) and publisher(s) of the Document do not by this License give permission to use their names for publicity for or to assert or imply endorsement of any Modified Version.\hyphpar0\par\pard\sb216\li960\sl374 {\*\bkmkstart ID_section5}{\*\bkmkend ID_section5}\b\fs28\lang1024\f1  5. COMBINING DOCUMENTS \keepn\hyphpar0\par\pard\sb144\li960\sl260 \b0\fs20\lang1033\f0 You may combine the Document with other documents released under this License, under the terms defined in section 4 above for modified versions, provided that you include in the combination all of the Invariant Sections of all of the original documents, unmodified, and list them all as Invariant Sections of your combined work in its license notice, and that you preserve all their Warranty Disclaimers.\hyphpar0\par\pard\sb100\li960\sl260 The combined work need only contain one copy of this License, and multiple identical Invariant Sections may be replaced with a single copy. If there are multiple Invariant Sections with the same name but different contents, make the title of each such section unique by adding at the end of it, in parentheses, the name of the original author or publisher of that section if known, or else a unique number. Make the same adjustment to the section titles in the list of Invariant Sections in the license notice of the combined work.\hyphpar0\par\pard\sb100\li960\sl260 In the combination, you must combine any sections Entitled \'93History\'94 in the various original documents, forming one section Entitled \'93History\'94; likewise combine any sections Entitled \'93Acknowledgements\'94, and any sections Entitled \'93Dedications\'94. You must delete all sections Entitled \'93Endorsements\'94.\hyphpar0\par\pard\sb216\li960\sl374 {\*\bkmkstart ID_section6}{\*\bkmkend ID_section6}\b\fs28\lang1024\f1  6. COLLECTIONS OF DOCUMENTS \keepn\hyphpar0\par\pard\sb144\li960\sl260 \b0\fs20\lang1033\f0 You may make a collection consisting of the Document and other documents released under this License, and replace the individual copies of this License in the various documents with a single copy that is included in the collection, provided that you follow the rules of this License for verbatim copying of each of the documents in all other respects.\hyphpar0\par\pard\sb100\li960\sl260 You may extract a single document from such a collection, and distribute it individually under this License, provided you insert a copy of this License into the extracted document, and follow this License in all other respects regarding verbatim copying of that document.\hyphpar0\par\pard\sb216\li960\sl374 {\*\bkmkstart ID_section7}{\*\bkmkend ID_section7}\b\fs28\lang1024\f1  7. AGGREGATION WITH INDEPENDENT WORKS \keepn\hyphpar0\par\pard\sb144\li960\sl260 \b0\fs20\lang1033\f0 A compilation of the Document or its derivatives with other separate and independent documents or works, in or on a volume of a storage or distribution medium, is called an \'93aggregate\'94 if the copyright resulting from the compilation is not used to limit the legal rights of the compilation\'92s users beyond what the individual works permit. When the Document is included in an aggregate, this License does not apply to the other works in the aggregate which are not themselves derivative works of the Document.\hyphpar0\par\pard\sb100\li960\sl260 If the Cover Text requirement of section 3 is applicable to these copies of the Document, then if the Document is less than one half of the entire aggregate, the Document\'92s Cover Texts may be placed on covers that bracket the Document within the aggregate, or the electronic equivalent of covers if the Document is in electronic form. Otherwise they must appear on printed covers that bracket the whole aggregate.\hyphpar0\par\pard\sb216\li960\sl374 {\*\bkmkstart ID_section8}{\*\bkmkend ID_section8}\b\fs28\lang1024\f1  8. TRANSLATION \keepn\hyphpar0\par\pard\sb144\li960\sl260 \b0\fs20\lang1033\f0 Translation is considered a kind of modification, so you may distribute translations of the Document under the terms of section 4. Replacing Invariant Sections with translations requires special permission from their copyright holders, but you may include translations of some or all Invariant Sections in addition to the original versions of these Invariant Sections. You may include a translation of this License, and all the license notices in the Document, and any Warranty Disclaimers, provided that you also include the original English version of this License and the original versions of those notices and disclaimers. In case of a disagreement between the translation and the original version of this License or a notice or disclaimer, the original version will prevail.\hyphpar0\par\pard\sb100\li960\sl260 If a section in the Document is Entitled \'93Acknowledgements\'94, \'93Dedications\'94, or \'93History\'94, the requirement (section 4) to Preserve its Title (section 1) will typically require changing the actual title.\hyphpar0\par\pard\sb216\li960\sl374 {\*\bkmkstart ID_section9}{\*\bkmkend ID_section9}\b\fs28\lang1024\f1  9. TERMINATION \keepn\hyphpar0\par\pard\sb144\li960\sl260 \b0\fs20\lang1033\f0 You may not copy, modify, sublicense, or distribute the Document except as expressly provided under this License. Any attempt otherwise to copy, modify, sublicense, or distribute it is void, and will automatically terminate your rights under this License.\hyphpar0\par\pard\sb100\li960\sl260 However, if you cease all violation of this License, then your license from a particular copyright holder is reinstated (a) provisionally, unless and until the copyright holder explicitly and finally terminates your license, and (b) permanently, if the copyright holder fails to notify you of the violation by some reasonable means prior to 60 days after the cessation.\hyphpar0\par\pard\sb100\li960\sl260 Moreover, your license from a particular copyright holder is reinstated permanently if the copyright holder notifies you of the violation by some reasonable means, this is the first time you have received notice of violation of this License (for any work) from that copyright holder, and you cure the violation prior to 30 days after your receipt of the notice.\hyphpar0\par\pard\sb100\li960\sl260 Termination of your rights under this section does not terminate the licenses of parties who have received copies or rights from you under this License. If your rights have been terminated and not permanently reinstated, receipt of a copy of some or all of the same material does not give you any rights to use it.\hyphpar0\par\pard\sb216\li960\sl374 {\*\bkmkstart ID_section10}{\*\bkmkend ID_section10}\b\fs28\lang1024\f1  10. FUTURE REVISIONS OF THIS LICENSE \keepn\hyphpar0\par\pard\sb144\li960\sl260 \b0\fs20\lang1033\f0 The Free Software Foundation may publish new, revised versions of the GNU Free Documentation License from time to time. Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns. See Copyleft (http://www.gnu.org/copyleft/).\hyphpar0\par\pard\sb100\li960\sl260 Each version of the License is given a distinguishing version number. If the Document specifies that a particular numbered version of this License \'93or any later version\'94 applies to it, you have the option of following the terms and conditions either of that specified version or of any later version that has been published (not as a draft) by the Free Software Foundation. If the Document does not specify a version number of this License, you may choose any version ever published (not as a draft) by the Free Software Foundation. If the Document specifies that a proxy can decide which future versions of this License can be used, that proxy\'92s public statement of acceptance of a version permanently authorizes you to choose that version for the Document.\hyphpar0\par\pard\sb216\li960\sl374 {\*\bkmkstart ID_section11}{\*\bkmkend ID_section11}\b\fs28\lang1024\f1  11. RELICENSING \keepn\hyphpar0\par\pard\sb144\li960\sl260 \b0\fs20\lang1033\f0 \'93Massive Multiauthor Collaboration Site\'94 (or \'93MMC Site\'94) means any World Wide Web server that publishes copyrightable works and also provides prominent facilities for anybody to edit those works. A public wiki that anybody can edit is an example of such a server. A \'93Massive Multiauthor Collaboration\'94 (or \'93MMC\'94) contained in the site means any set of copyrightable works thus published on the MMC site.\hyphpar0\par\pard\sb100\li960\sl260 \'93CC-BY-SA\'94 means the Creative Commons Attribution-Share Alike 3.0 license published by Creative Commons Corporation, a not-for-profit corporation with a principal place of business in San Francisco, California, as well as future copyleft versions of that license published by that same organization.\hyphpar0\par\pard\sb100\li960\sl260 \'93Incorporate\'94 means to publish or republish a Document, in whole or in part, as part of another Document.\hyphpar0\par\pard\sb100\li960\sl260 An MMC is \'93eligible for relicensing\'94 if it is licensed under this License, and if all works that were first published under this License somewhere other than this MMC, and subsequently incorporated in whole or in part into the MMC, (1) had no cover texts or invariant sections, and (2) were thus incorporated prior to November 1, 2008.\hyphpar0\par\pard\sb100\li960\sl260 The operator of an MMC Site may republish an MMC contained in the site under CC-BY-SA on the same site at any time before August 1, 2009, provided the MMC is eligible for relicensing.\hyphpar0\par\pard\sb216\li960\sl374 {\*\bkmkstart ID_addendum}{\*\bkmkend ID_addendum}\b\fs28\lang1024\f1  ADDENDUM: How to use this License for your documents \keepn\hyphpar0\par\pard\sb144\li960\sl260 \b0\fs20\lang1033\f0 To use this License in a document you have written, include a copy of the License in the document and put the following copyright and license notices just after the title page:\hyphpar0\par\pard\sb200\li960\sl234 \fs18\lang1024\f2 Copyright \'a9 YEAR YOUR NAME\sa0\par\fi0\sb0
\sa0\par\fi0\sb0
Permission is granted to copy, distribute and/or modify this document under the\sa0\par\fi0\sb0
terms of the GNU Free Documentation License, Version 1.3 or any later version\sa0\par\fi0\sb0
published by the Free Software Foundation; with no Invariant Sections, no\sa0\par\fi0\sb0
Front-Cover Texts, and no Back-Cover Texts. A copy of the license is included in\sa0\par\fi0\sb0
the section entitled \'93GNU Free Documentation License\'94.\hyphpar0\par\pard\sb200\li960\sl260 \fs20\lang1033\f0 If you have Invariant Sections, Front-Cover Texts and Back-Cover Texts, replace the \'93with\'85 Texts.\'94 line with this:\hyphpar0\par\pard\sb200\li960\sl234 \fs18\lang1024\f2 with the Invariant Sections being LIST THEIR TITLES, with the Front-Cover Texts\sa0\par\fi0\sb0
being LIST, and with the Back-Cover Texts being LIST.\hyphpar0\par\pard\sb200\li960\sl260 \fs20\lang1033\f0 If you have Invariant Sections without Cover Texts, or some other combination of the three, merge those two alternatives to suit the situation.\hyphpar0\par\pard\sb100\li960\sl260 If your document contains nontrivial examples of program code, we recommend releasing these examples in parallel under your choice of free software license, such as the GNU General Public License, to permit their use in free software.\hyphpar0\par\sect\sectd\plain\pgwsxn12240\pghsxn15840\marglsxn1440\margrsxn1440\margtsxn1440\margbsxn1920\headery0\footery0\pgndec{\headerl\pard\sl-240\sb770\sa430\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {}\par}{\footerl\pard\sl-240\sb770\sa910\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {\i\fs20 \chpgn }\par}{\headerr\pard\sl-240\sb770\sa430\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {}\par}{\footerr\pard\sl-240\sb770\sa910\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {\i\fs20 \chpgn }\par}\pard\sb311\s1\sl539 {\*\bkmkstart ID_colophon}{\*\bkmkend ID_colophon}\b\fs41\f1 Colophon\keepn\hyphpar0\par\pard\sb207\li960\sl260 \b0\fs20\lang1033\f0 This document was produced from DocBook (http://docbook.org/) source XML using OpenJade (http://openjade.sourceforge.net/) and the DocBook DSSSL Stylesheets.\hyphpar0\par\pard\sb100\li960\sl260 The production process for this instance of this document was started at 2023-02-18 18:22 .\hyphpar0\par}
